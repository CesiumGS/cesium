name: dev
on: 
  push:
    branches-ignore: 
      - 'cesium.com'
      - production
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: install node 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: npm install
        run: npm install
      - name: lint *.js
        run: npm run eslint
      - name: lint *.md
        run: npm run markdownlint
      - name: format code
        run: npm run prettier-check
  coverage:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1
      BRANCH: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v3
      - name: install node 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: npm install
        run: npm install
      - name: build
        run: npm run build
      - name: coverage (firefox)
        run: npm run coverage -- --browsers FirefoxHeadless --webgl-stub --failTaskOnError --suppressPassed
      - name: upload coverage artifacts
        if: ${{ env.AWS_ACCESS_KEY_ID != '' }}
        run: aws s3 sync ./Build/Coverage s3://cesium-public-builds/cesium/$BRANCH/Build/Coverage --delete --color on
  release-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: install node 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: npm install
        run: npm install
      - name: release build
        run: npm run build-release
      - name: release tests (chrome)
        run: npm run test -- --browsers ChromeHeadless --failTaskOnError --webgl-stub --release --suppressPassed
      - name: cloc
        run: npm run cloc
  deploy:
    runs-on: ubuntu-latest
    permissions:
      statuses: write
      contents: read
    env:
      BUILD_VERSION: ${{ github.ref_name }}.${{ github.run_number }}
      AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1
      BRANCH: ${{ github.ref_name }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_REPO: ${{ github.repository }}
      GITHUB_SHA: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v3
      - name: install node 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: npm install
        run: npm install
      - name: set the version in package.json
        run: npm run deploy-set-version -- --buildVersion $BUILD_VERSION
      - name: create release zip
        run: npm run make-zip
      - name: package cesium module
        run: npm pack &> /dev/null
      - name: package workspace modules
        run: npm pack --workspaces &> /dev/null
      - name: build apps
        run: npm run build-apps
      - uses: ./.github/actions/verify-package
      - name: deploy to s3
        if: ${{ env.AWS_ACCESS_KEY_ID != '' }}
        run: |
          aws s3 sync . s3://cesium-public-builds/cesium/$BRANCH/ \
          --cache-control "no-cache" \
          --exclude ".git/*" \
          --exclude ".concierge/*" \
          --exclude ".github/*" \
          --exclude ".husky/*" \
          --exclude ".vscode/*" \
          --exclude "Build/Coverage/*" \
          --exclude "Build/CesiumDev/*" \
          --exclude "Build/Specs/e2e" \
          --exclude "Documentation/*" \
          --exclude "node_modules/*" \
          --exclude "scripts/*" \
          --exclude "Tools/*" \
          --delete 
      - name: set status
        if: ${{ env.AWS_ACCESS_KEY_ID != '' }}
        run: npm run deploy-status -- --status success --message Deployed
  node-16:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: install node 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: npm install
        run: npm install
      - name: release build
        run: npm run build-release
      - name: package cesium module
        run: npm pack &> /dev/null
      - name: package workspace modules
        run: npm pack --workspaces &> /dev/null
      - uses: ./.github/actions/verify-package
