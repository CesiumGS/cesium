{"version":3,"file":"decodeDraco.js","sources":["../../../../Source/WorkersES6/decodeDraco.js"],"sourcesContent":["/* global require */\r\nimport ComponentDatatype from \"../Core/ComponentDatatype.js\";\r\nimport defined from \"../Core/defined.js\";\r\nimport IndexDatatype from \"../Core/IndexDatatype.js\";\r\nimport RuntimeError from \"../Core/RuntimeError.js\";\r\nimport createTaskProcessorWorker from \"./createTaskProcessorWorker.js\";\r\n\r\nvar draco;\r\n\r\nfunction decodeIndexArray(dracoGeometry, dracoDecoder) {\r\n  var numPoints = dracoGeometry.num_points();\r\n  var numFaces = dracoGeometry.num_faces();\r\n  var faceIndices = new draco.DracoInt32Array();\r\n  var numIndices = numFaces * 3;\r\n  var indexArray = IndexDatatype.createTypedArray(numPoints, numIndices);\r\n\r\n  var offset = 0;\r\n  for (var i = 0; i < numFaces; ++i) {\r\n    dracoDecoder.GetFaceFromMesh(dracoGeometry, i, faceIndices);\r\n\r\n    indexArray[offset + 0] = faceIndices.GetValue(0);\r\n    indexArray[offset + 1] = faceIndices.GetValue(1);\r\n    indexArray[offset + 2] = faceIndices.GetValue(2);\r\n    offset += 3;\r\n  }\r\n\r\n  draco.destroy(faceIndices);\r\n\r\n  return {\r\n    typedArray: indexArray,\r\n    numberOfIndices: numIndices,\r\n  };\r\n}\r\n\r\nfunction decodeQuantizedDracoTypedArray(\r\n  dracoGeometry,\r\n  dracoDecoder,\r\n  dracoAttribute,\r\n  quantization,\r\n  vertexArrayLength\r\n) {\r\n  var vertexArray;\r\n  var attributeData;\r\n  if (quantization.quantizationBits <= 8) {\r\n    attributeData = new draco.DracoUInt8Array();\r\n    vertexArray = new Uint8Array(vertexArrayLength);\r\n    dracoDecoder.GetAttributeUInt8ForAllPoints(\r\n      dracoGeometry,\r\n      dracoAttribute,\r\n      attributeData\r\n    );\r\n  } else {\r\n    attributeData = new draco.DracoUInt16Array();\r\n    vertexArray = new Uint16Array(vertexArrayLength);\r\n    dracoDecoder.GetAttributeUInt16ForAllPoints(\r\n      dracoGeometry,\r\n      dracoAttribute,\r\n      attributeData\r\n    );\r\n  }\r\n\r\n  for (var i = 0; i < vertexArrayLength; ++i) {\r\n    vertexArray[i] = attributeData.GetValue(i);\r\n  }\r\n\r\n  draco.destroy(attributeData);\r\n  return vertexArray;\r\n}\r\n\r\nfunction decodeDracoTypedArray(\r\n  dracoGeometry,\r\n  dracoDecoder,\r\n  dracoAttribute,\r\n  vertexArrayLength\r\n) {\r\n  var vertexArray;\r\n  var attributeData;\r\n\r\n  // Some attribute types are casted down to 32 bit since Draco only returns 32 bit values\r\n  switch (dracoAttribute.data_type()) {\r\n    case 1:\r\n    case 11: // DT_INT8 or DT_BOOL\r\n      attributeData = new draco.DracoInt8Array();\r\n      vertexArray = new Int8Array(vertexArrayLength);\r\n      dracoDecoder.GetAttributeInt8ForAllPoints(\r\n        dracoGeometry,\r\n        dracoAttribute,\r\n        attributeData\r\n      );\r\n      break;\r\n    case 2: // DT_UINT8\r\n      attributeData = new draco.DracoUInt8Array();\r\n      vertexArray = new Uint8Array(vertexArrayLength);\r\n      dracoDecoder.GetAttributeUInt8ForAllPoints(\r\n        dracoGeometry,\r\n        dracoAttribute,\r\n        attributeData\r\n      );\r\n      break;\r\n    case 3: // DT_INT16\r\n      attributeData = new draco.DracoInt16Array();\r\n      vertexArray = new Int16Array(vertexArrayLength);\r\n      dracoDecoder.GetAttributeInt16ForAllPoints(\r\n        dracoGeometry,\r\n        dracoAttribute,\r\n        attributeData\r\n      );\r\n      break;\r\n    case 4: // DT_UINT16\r\n      attributeData = new draco.DracoUInt16Array();\r\n      vertexArray = new Uint16Array(vertexArrayLength);\r\n      dracoDecoder.GetAttributeUInt16ForAllPoints(\r\n        dracoGeometry,\r\n        dracoAttribute,\r\n        attributeData\r\n      );\r\n      break;\r\n    case 5:\r\n    case 7: // DT_INT32 or DT_INT64\r\n      attributeData = new draco.DracoInt32Array();\r\n      vertexArray = new Int32Array(vertexArrayLength);\r\n      dracoDecoder.GetAttributeInt32ForAllPoints(\r\n        dracoGeometry,\r\n        dracoAttribute,\r\n        attributeData\r\n      );\r\n      break;\r\n    case 6:\r\n    case 8: // DT_UINT32 or DT_UINT64\r\n      attributeData = new draco.DracoUInt32Array();\r\n      vertexArray = new Uint32Array(vertexArrayLength);\r\n      dracoDecoder.GetAttributeUInt32ForAllPoints(\r\n        dracoGeometry,\r\n        dracoAttribute,\r\n        attributeData\r\n      );\r\n      break;\r\n    case 9:\r\n    case 10: // DT_FLOAT32 or DT_FLOAT64\r\n      attributeData = new draco.DracoFloat32Array();\r\n      vertexArray = new Float32Array(vertexArrayLength);\r\n      dracoDecoder.GetAttributeFloatForAllPoints(\r\n        dracoGeometry,\r\n        dracoAttribute,\r\n        attributeData\r\n      );\r\n      break;\r\n  }\r\n\r\n  for (var i = 0; i < vertexArrayLength; ++i) {\r\n    vertexArray[i] = attributeData.GetValue(i);\r\n  }\r\n\r\n  draco.destroy(attributeData);\r\n  return vertexArray;\r\n}\r\n\r\nfunction decodeAttribute(dracoGeometry, dracoDecoder, dracoAttribute) {\r\n  var numPoints = dracoGeometry.num_points();\r\n  var numComponents = dracoAttribute.num_components();\r\n\r\n  var quantization;\r\n  var transform = new draco.AttributeQuantizationTransform();\r\n  if (transform.InitFromAttribute(dracoAttribute)) {\r\n    var minValues = new Array(numComponents);\r\n    for (var i = 0; i < numComponents; ++i) {\r\n      minValues[i] = transform.min_value(i);\r\n    }\r\n    quantization = {\r\n      quantizationBits: transform.quantization_bits(),\r\n      minValues: minValues,\r\n      range: transform.range(),\r\n      octEncoded: false,\r\n    };\r\n  }\r\n  draco.destroy(transform);\r\n\r\n  transform = new draco.AttributeOctahedronTransform();\r\n  if (transform.InitFromAttribute(dracoAttribute)) {\r\n    quantization = {\r\n      quantizationBits: transform.quantization_bits(),\r\n      octEncoded: true,\r\n    };\r\n  }\r\n  draco.destroy(transform);\r\n\r\n  var vertexArrayLength = numPoints * numComponents;\r\n  var vertexArray;\r\n  if (defined(quantization)) {\r\n    vertexArray = decodeQuantizedDracoTypedArray(\r\n      dracoGeometry,\r\n      dracoDecoder,\r\n      dracoAttribute,\r\n      quantization,\r\n      vertexArrayLength\r\n    );\r\n  } else {\r\n    vertexArray = decodeDracoTypedArray(\r\n      dracoGeometry,\r\n      dracoDecoder,\r\n      dracoAttribute,\r\n      vertexArrayLength\r\n    );\r\n  }\r\n\r\n  var componentDatatype = ComponentDatatype.fromTypedArray(vertexArray);\r\n\r\n  return {\r\n    array: vertexArray,\r\n    data: {\r\n      componentsPerAttribute: numComponents,\r\n      componentDatatype: componentDatatype,\r\n      byteOffset: dracoAttribute.byte_offset(),\r\n      byteStride:\r\n        ComponentDatatype.getSizeInBytes(componentDatatype) * numComponents,\r\n      normalized: dracoAttribute.normalized(),\r\n      quantization: quantization,\r\n    },\r\n  };\r\n}\r\n\r\nfunction decodePointCloud(parameters) {\r\n  var dracoDecoder = new draco.Decoder();\r\n\r\n  if (parameters.dequantizeInShader) {\r\n    dracoDecoder.SkipAttributeTransform(draco.POSITION);\r\n    dracoDecoder.SkipAttributeTransform(draco.NORMAL);\r\n  }\r\n\r\n  var buffer = new draco.DecoderBuffer();\r\n  buffer.Init(parameters.buffer, parameters.buffer.length);\r\n\r\n  var geometryType = dracoDecoder.GetEncodedGeometryType(buffer);\r\n  if (geometryType !== draco.POINT_CLOUD) {\r\n    throw new RuntimeError(\"Draco geometry type must be POINT_CLOUD.\");\r\n  }\r\n\r\n  var dracoPointCloud = new draco.PointCloud();\r\n  var decodingStatus = dracoDecoder.DecodeBufferToPointCloud(\r\n    buffer,\r\n    dracoPointCloud\r\n  );\r\n  if (!decodingStatus.ok() || dracoPointCloud.ptr === 0) {\r\n    throw new RuntimeError(\r\n      \"Error decoding draco point cloud: \" + decodingStatus.error_msg()\r\n    );\r\n  }\r\n\r\n  draco.destroy(buffer);\r\n\r\n  var result = {};\r\n\r\n  var properties = parameters.properties;\r\n  for (var propertyName in properties) {\r\n    if (properties.hasOwnProperty(propertyName)) {\r\n      var attributeId = properties[propertyName];\r\n      var dracoAttribute = dracoDecoder.GetAttributeByUniqueId(\r\n        dracoPointCloud,\r\n        attributeId\r\n      );\r\n      result[propertyName] = decodeAttribute(\r\n        dracoPointCloud,\r\n        dracoDecoder,\r\n        dracoAttribute\r\n      );\r\n    }\r\n  }\r\n\r\n  draco.destroy(dracoPointCloud);\r\n  draco.destroy(dracoDecoder);\r\n\r\n  return result;\r\n}\r\n\r\nfunction decodePrimitive(parameters) {\r\n  var dracoDecoder = new draco.Decoder();\r\n\r\n  // Skip all parameter types except generic\r\n  var attributesToSkip = [\"POSITION\", \"NORMAL\", \"COLOR\", \"TEX_COORD\"];\r\n  if (parameters.dequantizeInShader) {\r\n    for (var i = 0; i < attributesToSkip.length; ++i) {\r\n      dracoDecoder.SkipAttributeTransform(draco[attributesToSkip[i]]);\r\n    }\r\n  }\r\n\r\n  var bufferView = parameters.bufferView;\r\n  var buffer = new draco.DecoderBuffer();\r\n  buffer.Init(parameters.array, bufferView.byteLength);\r\n\r\n  var geometryType = dracoDecoder.GetEncodedGeometryType(buffer);\r\n  if (geometryType !== draco.TRIANGULAR_MESH) {\r\n    throw new RuntimeError(\"Unsupported draco mesh geometry type.\");\r\n  }\r\n\r\n  var dracoGeometry = new draco.Mesh();\r\n  var decodingStatus = dracoDecoder.DecodeBufferToMesh(buffer, dracoGeometry);\r\n  if (!decodingStatus.ok() || dracoGeometry.ptr === 0) {\r\n    throw new RuntimeError(\r\n      \"Error decoding draco mesh geometry: \" + decodingStatus.error_msg()\r\n    );\r\n  }\r\n\r\n  draco.destroy(buffer);\r\n\r\n  var attributeData = {};\r\n\r\n  var compressedAttributes = parameters.compressedAttributes;\r\n  for (var attributeName in compressedAttributes) {\r\n    if (compressedAttributes.hasOwnProperty(attributeName)) {\r\n      var compressedAttribute = compressedAttributes[attributeName];\r\n      var dracoAttribute = dracoDecoder.GetAttributeByUniqueId(\r\n        dracoGeometry,\r\n        compressedAttribute\r\n      );\r\n      attributeData[attributeName] = decodeAttribute(\r\n        dracoGeometry,\r\n        dracoDecoder,\r\n        dracoAttribute\r\n      );\r\n    }\r\n  }\r\n\r\n  var result = {\r\n    indexArray: decodeIndexArray(dracoGeometry, dracoDecoder),\r\n    attributeData: attributeData,\r\n  };\r\n\r\n  draco.destroy(dracoGeometry);\r\n  draco.destroy(dracoDecoder);\r\n\r\n  return result;\r\n}\r\n\r\nfunction decode(parameters) {\r\n  if (defined(parameters.primitive)) {\r\n    return decodePrimitive(parameters);\r\n  }\r\n  return decodePointCloud(parameters);\r\n}\r\n\r\nfunction initWorker(dracoModule) {\r\n  draco = dracoModule;\r\n  self.onmessage = createTaskProcessorWorker(decode);\r\n  self.postMessage(true);\r\n}\r\n\r\nfunction decodeDraco(event) {\r\n  var data = event.data;\r\n\r\n  // Expect the first message to be to load a web assembly module\r\n  var wasmConfig = data.webAssemblyConfig;\r\n  if (defined(wasmConfig)) {\r\n    // Require and compile WebAssembly module, or use fallback if not supported\r\n    return require([wasmConfig.modulePath], function (dracoModule) {\r\n      if (defined(wasmConfig.wasmBinaryFile)) {\r\n        if (!defined(dracoModule)) {\r\n          dracoModule = self.DracoDecoderModule;\r\n        }\r\n\r\n        dracoModule(wasmConfig).then(function (compiledModule) {\r\n          initWorker(compiledModule);\r\n        });\r\n      } else {\r\n        initWorker(dracoModule());\r\n      }\r\n    });\r\n  }\r\n}\r\nexport default decodeDraco;\r\n"],"names":["IndexDatatype","defined","ComponentDatatype","RuntimeError"],"mappings":"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"}