{"version":3,"file":"EllipsoidGeodesic-d29959d5.js","sources":["../../../../Source/Core/EllipsoidGeodesic.js"],"sourcesContent":["import Cartesian3 from \"./Cartesian3.js\";\r\nimport Cartographic from \"./Cartographic.js\";\r\nimport Check from \"./Check.js\";\r\nimport defaultValue from \"./defaultValue.js\";\r\nimport defined from \"./defined.js\";\r\nimport Ellipsoid from \"./Ellipsoid.js\";\r\nimport CesiumMath from \"./Math.js\";\r\n\r\nfunction setConstants(ellipsoidGeodesic) {\r\n  var uSquared = ellipsoidGeodesic._uSquared;\r\n  var a = ellipsoidGeodesic._ellipsoid.maximumRadius;\r\n  var b = ellipsoidGeodesic._ellipsoid.minimumRadius;\r\n  var f = (a - b) / a;\r\n\r\n  var cosineHeading = Math.cos(ellipsoidGeodesic._startHeading);\r\n  var sineHeading = Math.sin(ellipsoidGeodesic._startHeading);\r\n\r\n  var tanU = (1 - f) * Math.tan(ellipsoidGeodesic._start.latitude);\r\n\r\n  var cosineU = 1.0 / Math.sqrt(1.0 + tanU * tanU);\r\n  var sineU = cosineU * tanU;\r\n\r\n  var sigma = Math.atan2(tanU, cosineHeading);\r\n\r\n  var sineAlpha = cosineU * sineHeading;\r\n  var sineSquaredAlpha = sineAlpha * sineAlpha;\r\n\r\n  var cosineSquaredAlpha = 1.0 - sineSquaredAlpha;\r\n  var cosineAlpha = Math.sqrt(cosineSquaredAlpha);\r\n\r\n  var u2Over4 = uSquared / 4.0;\r\n  var u4Over16 = u2Over4 * u2Over4;\r\n  var u6Over64 = u4Over16 * u2Over4;\r\n  var u8Over256 = u4Over16 * u4Over16;\r\n\r\n  var a0 =\r\n    1.0 +\r\n    u2Over4 -\r\n    (3.0 * u4Over16) / 4.0 +\r\n    (5.0 * u6Over64) / 4.0 -\r\n    (175.0 * u8Over256) / 64.0;\r\n  var a1 = 1.0 - u2Over4 + (15.0 * u4Over16) / 8.0 - (35.0 * u6Over64) / 8.0;\r\n  var a2 = 1.0 - 3.0 * u2Over4 + (35.0 * u4Over16) / 4.0;\r\n  var a3 = 1.0 - 5.0 * u2Over4;\r\n\r\n  var distanceRatio =\r\n    a0 * sigma -\r\n    (a1 * Math.sin(2.0 * sigma) * u2Over4) / 2.0 -\r\n    (a2 * Math.sin(4.0 * sigma) * u4Over16) / 16.0 -\r\n    (a3 * Math.sin(6.0 * sigma) * u6Over64) / 48.0 -\r\n    (Math.sin(8.0 * sigma) * 5.0 * u8Over256) / 512;\r\n\r\n  var constants = ellipsoidGeodesic._constants;\r\n\r\n  constants.a = a;\r\n  constants.b = b;\r\n  constants.f = f;\r\n  constants.cosineHeading = cosineHeading;\r\n  constants.sineHeading = sineHeading;\r\n  constants.tanU = tanU;\r\n  constants.cosineU = cosineU;\r\n  constants.sineU = sineU;\r\n  constants.sigma = sigma;\r\n  constants.sineAlpha = sineAlpha;\r\n  constants.sineSquaredAlpha = sineSquaredAlpha;\r\n  constants.cosineSquaredAlpha = cosineSquaredAlpha;\r\n  constants.cosineAlpha = cosineAlpha;\r\n  constants.u2Over4 = u2Over4;\r\n  constants.u4Over16 = u4Over16;\r\n  constants.u6Over64 = u6Over64;\r\n  constants.u8Over256 = u8Over256;\r\n  constants.a0 = a0;\r\n  constants.a1 = a1;\r\n  constants.a2 = a2;\r\n  constants.a3 = a3;\r\n  constants.distanceRatio = distanceRatio;\r\n}\r\n\r\nfunction computeC(f, cosineSquaredAlpha) {\r\n  return (\r\n    (f * cosineSquaredAlpha * (4.0 + f * (4.0 - 3.0 * cosineSquaredAlpha))) /\r\n    16.0\r\n  );\r\n}\r\n\r\nfunction computeDeltaLambda(\r\n  f,\r\n  sineAlpha,\r\n  cosineSquaredAlpha,\r\n  sigma,\r\n  sineSigma,\r\n  cosineSigma,\r\n  cosineTwiceSigmaMidpoint\r\n) {\r\n  var C = computeC(f, cosineSquaredAlpha);\r\n\r\n  return (\r\n    (1.0 - C) *\r\n    f *\r\n    sineAlpha *\r\n    (sigma +\r\n      C *\r\n        sineSigma *\r\n        (cosineTwiceSigmaMidpoint +\r\n          C *\r\n            cosineSigma *\r\n            (2.0 * cosineTwiceSigmaMidpoint * cosineTwiceSigmaMidpoint - 1.0)))\r\n  );\r\n}\r\n\r\nfunction vincentyInverseFormula(\r\n  ellipsoidGeodesic,\r\n  major,\r\n  minor,\r\n  firstLongitude,\r\n  firstLatitude,\r\n  secondLongitude,\r\n  secondLatitude\r\n) {\r\n  var eff = (major - minor) / major;\r\n  var l = secondLongitude - firstLongitude;\r\n\r\n  var u1 = Math.atan((1 - eff) * Math.tan(firstLatitude));\r\n  var u2 = Math.atan((1 - eff) * Math.tan(secondLatitude));\r\n\r\n  var cosineU1 = Math.cos(u1);\r\n  var sineU1 = Math.sin(u1);\r\n  var cosineU2 = Math.cos(u2);\r\n  var sineU2 = Math.sin(u2);\r\n\r\n  var cc = cosineU1 * cosineU2;\r\n  var cs = cosineU1 * sineU2;\r\n  var ss = sineU1 * sineU2;\r\n  var sc = sineU1 * cosineU2;\r\n\r\n  var lambda = l;\r\n  var lambdaDot = CesiumMath.TWO_PI;\r\n\r\n  var cosineLambda = Math.cos(lambda);\r\n  var sineLambda = Math.sin(lambda);\r\n\r\n  var sigma;\r\n  var cosineSigma;\r\n  var sineSigma;\r\n  var cosineSquaredAlpha;\r\n  var cosineTwiceSigmaMidpoint;\r\n\r\n  do {\r\n    cosineLambda = Math.cos(lambda);\r\n    sineLambda = Math.sin(lambda);\r\n\r\n    var temp = cs - sc * cosineLambda;\r\n    sineSigma = Math.sqrt(\r\n      cosineU2 * cosineU2 * sineLambda * sineLambda + temp * temp\r\n    );\r\n    cosineSigma = ss + cc * cosineLambda;\r\n\r\n    sigma = Math.atan2(sineSigma, cosineSigma);\r\n\r\n    var sineAlpha;\r\n\r\n    if (sineSigma === 0.0) {\r\n      sineAlpha = 0.0;\r\n      cosineSquaredAlpha = 1.0;\r\n    } else {\r\n      sineAlpha = (cc * sineLambda) / sineSigma;\r\n      cosineSquaredAlpha = 1.0 - sineAlpha * sineAlpha;\r\n    }\r\n\r\n    lambdaDot = lambda;\r\n\r\n    cosineTwiceSigmaMidpoint = cosineSigma - (2.0 * ss) / cosineSquaredAlpha;\r\n\r\n    if (!isFinite(cosineTwiceSigmaMidpoint)) {\r\n      cosineTwiceSigmaMidpoint = 0.0;\r\n    }\r\n\r\n    lambda =\r\n      l +\r\n      computeDeltaLambda(\r\n        eff,\r\n        sineAlpha,\r\n        cosineSquaredAlpha,\r\n        sigma,\r\n        sineSigma,\r\n        cosineSigma,\r\n        cosineTwiceSigmaMidpoint\r\n      );\r\n  } while (Math.abs(lambda - lambdaDot) > CesiumMath.EPSILON12);\r\n\r\n  var uSquared =\r\n    (cosineSquaredAlpha * (major * major - minor * minor)) / (minor * minor);\r\n  var A =\r\n    1.0 +\r\n    (uSquared *\r\n      (4096.0 + uSquared * (uSquared * (320.0 - 175.0 * uSquared) - 768.0))) /\r\n      16384.0;\r\n  var B =\r\n    (uSquared *\r\n      (256.0 + uSquared * (uSquared * (74.0 - 47.0 * uSquared) - 128.0))) /\r\n    1024.0;\r\n\r\n  var cosineSquaredTwiceSigmaMidpoint =\r\n    cosineTwiceSigmaMidpoint * cosineTwiceSigmaMidpoint;\r\n  var deltaSigma =\r\n    B *\r\n    sineSigma *\r\n    (cosineTwiceSigmaMidpoint +\r\n      (B *\r\n        (cosineSigma * (2.0 * cosineSquaredTwiceSigmaMidpoint - 1.0) -\r\n          (B *\r\n            cosineTwiceSigmaMidpoint *\r\n            (4.0 * sineSigma * sineSigma - 3.0) *\r\n            (4.0 * cosineSquaredTwiceSigmaMidpoint - 3.0)) /\r\n            6.0)) /\r\n        4.0);\r\n\r\n  var distance = minor * A * (sigma - deltaSigma);\r\n\r\n  var startHeading = Math.atan2(cosineU2 * sineLambda, cs - sc * cosineLambda);\r\n  var endHeading = Math.atan2(cosineU1 * sineLambda, cs * cosineLambda - sc);\r\n\r\n  ellipsoidGeodesic._distance = distance;\r\n  ellipsoidGeodesic._startHeading = startHeading;\r\n  ellipsoidGeodesic._endHeading = endHeading;\r\n  ellipsoidGeodesic._uSquared = uSquared;\r\n}\r\n\r\nvar scratchCart1 = new Cartesian3();\r\nvar scratchCart2 = new Cartesian3();\r\nfunction computeProperties(ellipsoidGeodesic, start, end, ellipsoid) {\r\n  var firstCartesian = Cartesian3.normalize(\r\n    ellipsoid.cartographicToCartesian(start, scratchCart2),\r\n    scratchCart1\r\n  );\r\n  var lastCartesian = Cartesian3.normalize(\r\n    ellipsoid.cartographicToCartesian(end, scratchCart2),\r\n    scratchCart2\r\n  );\r\n\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.typeOf.number.greaterThanOrEquals(\r\n    \"value\",\r\n    Math.abs(\r\n      Math.abs(Cartesian3.angleBetween(firstCartesian, lastCartesian)) - Math.PI\r\n    ),\r\n    0.0125\r\n  );\r\n  //>>includeEnd('debug');\r\n\r\n  vincentyInverseFormula(\r\n    ellipsoidGeodesic,\r\n    ellipsoid.maximumRadius,\r\n    ellipsoid.minimumRadius,\r\n    start.longitude,\r\n    start.latitude,\r\n    end.longitude,\r\n    end.latitude\r\n  );\r\n\r\n  ellipsoidGeodesic._start = Cartographic.clone(\r\n    start,\r\n    ellipsoidGeodesic._start\r\n  );\r\n  ellipsoidGeodesic._end = Cartographic.clone(end, ellipsoidGeodesic._end);\r\n  ellipsoidGeodesic._start.height = 0;\r\n  ellipsoidGeodesic._end.height = 0;\r\n\r\n  setConstants(ellipsoidGeodesic);\r\n}\r\n\r\n/**\r\n * Initializes a geodesic on the ellipsoid connecting the two provided planetodetic points.\r\n *\r\n * @alias EllipsoidGeodesic\r\n * @constructor\r\n *\r\n * @param {Cartographic} [start] The initial planetodetic point on the path.\r\n * @param {Cartographic} [end] The final planetodetic point on the path.\r\n * @param {Ellipsoid} [ellipsoid=Ellipsoid.WGS84] The ellipsoid on which the geodesic lies.\r\n */\r\nfunction EllipsoidGeodesic(start, end, ellipsoid) {\r\n  var e = defaultValue(ellipsoid, Ellipsoid.WGS84);\r\n  this._ellipsoid = e;\r\n  this._start = new Cartographic();\r\n  this._end = new Cartographic();\r\n\r\n  this._constants = {};\r\n  this._startHeading = undefined;\r\n  this._endHeading = undefined;\r\n  this._distance = undefined;\r\n  this._uSquared = undefined;\r\n\r\n  if (defined(start) && defined(end)) {\r\n    computeProperties(this, start, end, e);\r\n  }\r\n}\r\n\r\nObject.defineProperties(EllipsoidGeodesic.prototype, {\r\n  /**\r\n   * Gets the ellipsoid.\r\n   * @memberof EllipsoidGeodesic.prototype\r\n   * @type {Ellipsoid}\r\n   * @readonly\r\n   */\r\n  ellipsoid: {\r\n    get: function () {\r\n      return this._ellipsoid;\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Gets the surface distance between the start and end point\r\n   * @memberof EllipsoidGeodesic.prototype\r\n   * @type {Number}\r\n   * @readonly\r\n   */\r\n  surfaceDistance: {\r\n    get: function () {\r\n      //>>includeStart('debug', pragmas.debug);\r\n      Check.defined(\"distance\", this._distance);\r\n      //>>includeEnd('debug');\r\n\r\n      return this._distance;\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Gets the initial planetodetic point on the path.\r\n   * @memberof EllipsoidGeodesic.prototype\r\n   * @type {Cartographic}\r\n   * @readonly\r\n   */\r\n  start: {\r\n    get: function () {\r\n      return this._start;\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Gets the final planetodetic point on the path.\r\n   * @memberof EllipsoidGeodesic.prototype\r\n   * @type {Cartographic}\r\n   * @readonly\r\n   */\r\n  end: {\r\n    get: function () {\r\n      return this._end;\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Gets the heading at the initial point.\r\n   * @memberof EllipsoidGeodesic.prototype\r\n   * @type {Number}\r\n   * @readonly\r\n   */\r\n  startHeading: {\r\n    get: function () {\r\n      //>>includeStart('debug', pragmas.debug);\r\n      Check.defined(\"distance\", this._distance);\r\n      //>>includeEnd('debug');\r\n\r\n      return this._startHeading;\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Gets the heading at the final point.\r\n   * @memberof EllipsoidGeodesic.prototype\r\n   * @type {Number}\r\n   * @readonly\r\n   */\r\n  endHeading: {\r\n    get: function () {\r\n      //>>includeStart('debug', pragmas.debug);\r\n      Check.defined(\"distance\", this._distance);\r\n      //>>includeEnd('debug');\r\n\r\n      return this._endHeading;\r\n    },\r\n  },\r\n});\r\n\r\n/**\r\n * Sets the start and end points of the geodesic\r\n *\r\n * @param {Cartographic} start The initial planetodetic point on the path.\r\n * @param {Cartographic} end The final planetodetic point on the path.\r\n */\r\nEllipsoidGeodesic.prototype.setEndPoints = function (start, end) {\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.defined(\"start\", start);\r\n  Check.defined(\"end\", end);\r\n  //>>includeEnd('debug');\r\n\r\n  computeProperties(this, start, end, this._ellipsoid);\r\n};\r\n\r\n/**\r\n * Provides the location of a point at the indicated portion along the geodesic.\r\n *\r\n * @param {Number} fraction The portion of the distance between the initial and final points.\r\n * @param {Cartographic} [result] The object in which to store the result.\r\n * @returns {Cartographic} The location of the point along the geodesic.\r\n */\r\nEllipsoidGeodesic.prototype.interpolateUsingFraction = function (\r\n  fraction,\r\n  result\r\n) {\r\n  return this.interpolateUsingSurfaceDistance(\r\n    this._distance * fraction,\r\n    result\r\n  );\r\n};\r\n\r\n/**\r\n * Provides the location of a point at the indicated distance along the geodesic.\r\n *\r\n * @param {Number} distance The distance from the inital point to the point of interest along the geodesic\r\n * @param {Cartographic} [result] The object in which to store the result.\r\n * @returns {Cartographic} The location of the point along the geodesic.\r\n *\r\n * @exception {DeveloperError} start and end must be set before calling function interpolateUsingSurfaceDistance\r\n */\r\nEllipsoidGeodesic.prototype.interpolateUsingSurfaceDistance = function (\r\n  distance,\r\n  result\r\n) {\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.defined(\"distance\", this._distance);\r\n  //>>includeEnd('debug');\r\n\r\n  var constants = this._constants;\r\n\r\n  var s = constants.distanceRatio + distance / constants.b;\r\n\r\n  var cosine2S = Math.cos(2.0 * s);\r\n  var cosine4S = Math.cos(4.0 * s);\r\n  var cosine6S = Math.cos(6.0 * s);\r\n  var sine2S = Math.sin(2.0 * s);\r\n  var sine4S = Math.sin(4.0 * s);\r\n  var sine6S = Math.sin(6.0 * s);\r\n  var sine8S = Math.sin(8.0 * s);\r\n\r\n  var s2 = s * s;\r\n  var s3 = s * s2;\r\n\r\n  var u8Over256 = constants.u8Over256;\r\n  var u2Over4 = constants.u2Over4;\r\n  var u6Over64 = constants.u6Over64;\r\n  var u4Over16 = constants.u4Over16;\r\n  var sigma =\r\n    (2.0 * s3 * u8Over256 * cosine2S) / 3.0 +\r\n    s *\r\n      (1.0 -\r\n        u2Over4 +\r\n        (7.0 * u4Over16) / 4.0 -\r\n        (15.0 * u6Over64) / 4.0 +\r\n        (579.0 * u8Over256) / 64.0 -\r\n        (u4Over16 - (15.0 * u6Over64) / 4.0 + (187.0 * u8Over256) / 16.0) *\r\n          cosine2S -\r\n        ((5.0 * u6Over64) / 4.0 - (115.0 * u8Over256) / 16.0) * cosine4S -\r\n        (29.0 * u8Over256 * cosine6S) / 16.0) +\r\n    (u2Over4 / 2.0 -\r\n      u4Over16 +\r\n      (71.0 * u6Over64) / 32.0 -\r\n      (85.0 * u8Over256) / 16.0) *\r\n      sine2S +\r\n    ((5.0 * u4Over16) / 16.0 -\r\n      (5.0 * u6Over64) / 4.0 +\r\n      (383.0 * u8Over256) / 96.0) *\r\n      sine4S -\r\n    s2 *\r\n      ((u6Over64 - (11.0 * u8Over256) / 2.0) * sine2S +\r\n        (5.0 * u8Over256 * sine4S) / 2.0) +\r\n    ((29.0 * u6Over64) / 96.0 - (29.0 * u8Over256) / 16.0) * sine6S +\r\n    (539.0 * u8Over256 * sine8S) / 1536.0;\r\n\r\n  var theta = Math.asin(Math.sin(sigma) * constants.cosineAlpha);\r\n  var latitude = Math.atan((constants.a / constants.b) * Math.tan(theta));\r\n\r\n  // Redefine in terms of relative argument of latitude.\r\n  sigma = sigma - constants.sigma;\r\n\r\n  var cosineTwiceSigmaMidpoint = Math.cos(2.0 * constants.sigma + sigma);\r\n\r\n  var sineSigma = Math.sin(sigma);\r\n  var cosineSigma = Math.cos(sigma);\r\n\r\n  var cc = constants.cosineU * cosineSigma;\r\n  var ss = constants.sineU * sineSigma;\r\n\r\n  var lambda = Math.atan2(\r\n    sineSigma * constants.sineHeading,\r\n    cc - ss * constants.cosineHeading\r\n  );\r\n\r\n  var l =\r\n    lambda -\r\n    computeDeltaLambda(\r\n      constants.f,\r\n      constants.sineAlpha,\r\n      constants.cosineSquaredAlpha,\r\n      sigma,\r\n      sineSigma,\r\n      cosineSigma,\r\n      cosineTwiceSigmaMidpoint\r\n    );\r\n\r\n  if (defined(result)) {\r\n    result.longitude = this._start.longitude + l;\r\n    result.latitude = latitude;\r\n    result.height = 0.0;\r\n    return result;\r\n  }\r\n\r\n  return new Cartographic(this._start.longitude + l, latitude, 0.0);\r\n};\r\nexport default EllipsoidGeodesic;\r\n"],"names":["CesiumMath","Cartesian3","Check","Cartographic","defaultValue","Ellipsoid","defined"],"mappings":"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"}