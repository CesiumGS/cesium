{"version":3,"file":"createFrustumOutlineGeometry.js","sources":["../../../../Source/Core/FrustumOutlineGeometry.js","../../../../Source/WorkersES6/createFrustumOutlineGeometry.js"],"sourcesContent":["import BoundingSphere from \"./BoundingSphere.js\";\r\nimport Cartesian3 from \"./Cartesian3.js\";\r\nimport Check from \"./Check.js\";\r\nimport ComponentDatatype from \"./ComponentDatatype.js\";\r\nimport defaultValue from \"./defaultValue.js\";\r\nimport defined from \"./defined.js\";\r\nimport FrustumGeometry from \"./FrustumGeometry.js\";\r\nimport Geometry from \"./Geometry.js\";\r\nimport GeometryAttribute from \"./GeometryAttribute.js\";\r\nimport GeometryAttributes from \"./GeometryAttributes.js\";\r\nimport OrthographicFrustum from \"./OrthographicFrustum.js\";\r\nimport PerspectiveFrustum from \"./PerspectiveFrustum.js\";\r\nimport PrimitiveType from \"./PrimitiveType.js\";\r\nimport Quaternion from \"./Quaternion.js\";\r\n\r\nvar PERSPECTIVE = 0;\r\nvar ORTHOGRAPHIC = 1;\r\n\r\n/**\r\n * A description of the outline of a frustum with the given the origin and orientation.\r\n *\r\n * @alias FrustumOutlineGeometry\r\n * @constructor\r\n *\r\n * @param {Object} options Object with the following properties:\r\n * @param {PerspectiveFrustum|OrthographicFrustum} options.frustum The frustum.\r\n * @param {Cartesian3} options.origin The origin of the frustum.\r\n * @param {Quaternion} options.orientation The orientation of the frustum.\r\n */\r\nfunction FrustumOutlineGeometry(options) {\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.typeOf.object(\"options\", options);\r\n  Check.typeOf.object(\"options.frustum\", options.frustum);\r\n  Check.typeOf.object(\"options.origin\", options.origin);\r\n  Check.typeOf.object(\"options.orientation\", options.orientation);\r\n  //>>includeEnd('debug');\r\n\r\n  var frustum = options.frustum;\r\n  var orientation = options.orientation;\r\n  var origin = options.origin;\r\n\r\n  // This is private because it is used by DebugCameraPrimitive to draw a multi-frustum by\r\n  // creating multiple FrustumOutlineGeometrys. This way the near plane of one frustum doesn't overlap\r\n  // the far plane of another.\r\n  var drawNearPlane = defaultValue(options._drawNearPlane, true);\r\n\r\n  var frustumType;\r\n  var frustumPackedLength;\r\n  if (frustum instanceof PerspectiveFrustum) {\r\n    frustumType = PERSPECTIVE;\r\n    frustumPackedLength = PerspectiveFrustum.packedLength;\r\n  } else if (frustum instanceof OrthographicFrustum) {\r\n    frustumType = ORTHOGRAPHIC;\r\n    frustumPackedLength = OrthographicFrustum.packedLength;\r\n  }\r\n\r\n  this._frustumType = frustumType;\r\n  this._frustum = frustum.clone();\r\n  this._origin = Cartesian3.clone(origin);\r\n  this._orientation = Quaternion.clone(orientation);\r\n  this._drawNearPlane = drawNearPlane;\r\n  this._workerName = \"createFrustumOutlineGeometry\";\r\n\r\n  /**\r\n   * The number of elements used to pack the object into an array.\r\n   * @type {Number}\r\n   */\r\n  this.packedLength =\r\n    2 + frustumPackedLength + Cartesian3.packedLength + Quaternion.packedLength;\r\n}\r\n\r\n/**\r\n * Stores the provided instance into the provided array.\r\n *\r\n * @param {FrustumOutlineGeometry} value The value to pack.\r\n * @param {Number[]} array The array to pack into.\r\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\r\n *\r\n * @returns {Number[]} The array that was packed into\r\n */\r\nFrustumOutlineGeometry.pack = function (value, array, startingIndex) {\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.typeOf.object(\"value\", value);\r\n  Check.defined(\"array\", array);\r\n  //>>includeEnd('debug');\r\n\r\n  startingIndex = defaultValue(startingIndex, 0);\r\n\r\n  var frustumType = value._frustumType;\r\n  var frustum = value._frustum;\r\n\r\n  array[startingIndex++] = frustumType;\r\n\r\n  if (frustumType === PERSPECTIVE) {\r\n    PerspectiveFrustum.pack(frustum, array, startingIndex);\r\n    startingIndex += PerspectiveFrustum.packedLength;\r\n  } else {\r\n    OrthographicFrustum.pack(frustum, array, startingIndex);\r\n    startingIndex += OrthographicFrustum.packedLength;\r\n  }\r\n\r\n  Cartesian3.pack(value._origin, array, startingIndex);\r\n  startingIndex += Cartesian3.packedLength;\r\n  Quaternion.pack(value._orientation, array, startingIndex);\r\n  startingIndex += Quaternion.packedLength;\r\n  array[startingIndex] = value._drawNearPlane ? 1.0 : 0.0;\r\n\r\n  return array;\r\n};\r\n\r\nvar scratchPackPerspective = new PerspectiveFrustum();\r\nvar scratchPackOrthographic = new OrthographicFrustum();\r\nvar scratchPackQuaternion = new Quaternion();\r\nvar scratchPackorigin = new Cartesian3();\r\n\r\n/**\r\n * Retrieves an instance from a packed array.\r\n *\r\n * @param {Number[]} array The packed array.\r\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\r\n * @param {FrustumOutlineGeometry} [result] The object into which to store the result.\r\n */\r\nFrustumOutlineGeometry.unpack = function (array, startingIndex, result) {\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.defined(\"array\", array);\r\n  //>>includeEnd('debug');\r\n\r\n  startingIndex = defaultValue(startingIndex, 0);\r\n\r\n  var frustumType = array[startingIndex++];\r\n\r\n  var frustum;\r\n  if (frustumType === PERSPECTIVE) {\r\n    frustum = PerspectiveFrustum.unpack(\r\n      array,\r\n      startingIndex,\r\n      scratchPackPerspective\r\n    );\r\n    startingIndex += PerspectiveFrustum.packedLength;\r\n  } else {\r\n    frustum = OrthographicFrustum.unpack(\r\n      array,\r\n      startingIndex,\r\n      scratchPackOrthographic\r\n    );\r\n    startingIndex += OrthographicFrustum.packedLength;\r\n  }\r\n\r\n  var origin = Cartesian3.unpack(array, startingIndex, scratchPackorigin);\r\n  startingIndex += Cartesian3.packedLength;\r\n  var orientation = Quaternion.unpack(\r\n    array,\r\n    startingIndex,\r\n    scratchPackQuaternion\r\n  );\r\n  startingIndex += Quaternion.packedLength;\r\n  var drawNearPlane = array[startingIndex] === 1.0;\r\n\r\n  if (!defined(result)) {\r\n    return new FrustumOutlineGeometry({\r\n      frustum: frustum,\r\n      origin: origin,\r\n      orientation: orientation,\r\n      _drawNearPlane: drawNearPlane,\r\n    });\r\n  }\r\n\r\n  var frustumResult =\r\n    frustumType === result._frustumType ? result._frustum : undefined;\r\n  result._frustum = frustum.clone(frustumResult);\r\n\r\n  result._frustumType = frustumType;\r\n  result._origin = Cartesian3.clone(origin, result._origin);\r\n  result._orientation = Quaternion.clone(orientation, result._orientation);\r\n  result._drawNearPlane = drawNearPlane;\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Computes the geometric representation of a frustum outline, including its vertices, indices, and a bounding sphere.\r\n *\r\n * @param {FrustumOutlineGeometry} frustumGeometry A description of the frustum.\r\n * @returns {Geometry|undefined} The computed vertices and indices.\r\n */\r\nFrustumOutlineGeometry.createGeometry = function (frustumGeometry) {\r\n  var frustumType = frustumGeometry._frustumType;\r\n  var frustum = frustumGeometry._frustum;\r\n  var origin = frustumGeometry._origin;\r\n  var orientation = frustumGeometry._orientation;\r\n  var drawNearPlane = frustumGeometry._drawNearPlane;\r\n\r\n  var positions = new Float64Array(3 * 4 * 2);\r\n  FrustumGeometry._computeNearFarPlanes(\r\n    origin,\r\n    orientation,\r\n    frustumType,\r\n    frustum,\r\n    positions\r\n  );\r\n\r\n  var attributes = new GeometryAttributes({\r\n    position: new GeometryAttribute({\r\n      componentDatatype: ComponentDatatype.DOUBLE,\r\n      componentsPerAttribute: 3,\r\n      values: positions,\r\n    }),\r\n  });\r\n\r\n  var offset;\r\n  var index;\r\n\r\n  var numberOfPlanes = drawNearPlane ? 2 : 1;\r\n  var indices = new Uint16Array(8 * (numberOfPlanes + 1));\r\n\r\n  // Build the near/far planes\r\n  var i = drawNearPlane ? 0 : 1;\r\n  for (; i < 2; ++i) {\r\n    offset = drawNearPlane ? i * 8 : 0;\r\n    index = i * 4;\r\n\r\n    indices[offset] = index;\r\n    indices[offset + 1] = index + 1;\r\n    indices[offset + 2] = index + 1;\r\n    indices[offset + 3] = index + 2;\r\n    indices[offset + 4] = index + 2;\r\n    indices[offset + 5] = index + 3;\r\n    indices[offset + 6] = index + 3;\r\n    indices[offset + 7] = index;\r\n  }\r\n\r\n  // Build the sides of the frustums\r\n  for (i = 0; i < 2; ++i) {\r\n    offset = (numberOfPlanes + i) * 8;\r\n    index = i * 4;\r\n\r\n    indices[offset] = index;\r\n    indices[offset + 1] = index + 4;\r\n    indices[offset + 2] = index + 1;\r\n    indices[offset + 3] = index + 5;\r\n    indices[offset + 4] = index + 2;\r\n    indices[offset + 5] = index + 6;\r\n    indices[offset + 6] = index + 3;\r\n    indices[offset + 7] = index + 7;\r\n  }\r\n\r\n  return new Geometry({\r\n    attributes: attributes,\r\n    indices: indices,\r\n    primitiveType: PrimitiveType.LINES,\r\n    boundingSphere: BoundingSphere.fromVertices(positions),\r\n  });\r\n};\r\nexport default FrustumOutlineGeometry;\r\n","import defined from \"../Core/defined.js\";\r\nimport FrustumOutlineGeometry from \"../Core/FrustumOutlineGeometry.js\";\r\n\r\nfunction createFrustumOutlineGeometry(frustumGeometry, offset) {\r\n  if (defined(offset)) {\r\n    frustumGeometry = FrustumOutlineGeometry.unpack(frustumGeometry, offset);\r\n  }\r\n  return FrustumOutlineGeometry.createGeometry(frustumGeometry);\r\n}\r\nexport default createFrustumOutlineGeometry;\r\n"],"names":["Check","defaultValue","PerspectiveFrustum","OrthographicFrustum","Cartesian3","Quaternion","defined","FrustumGeometry","GeometryAttributes","GeometryAttribute","ComponentDatatype","Geometry","PrimitiveType","BoundingSphere"],"mappings":"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"}