{"version":3,"file":"RectangleGeometryLibrary-1970f70e.js","sources":["../../../../Source/Core/RectangleGeometryLibrary.js"],"sourcesContent":["import Cartesian3 from \"./Cartesian3.js\";\r\nimport Cartographic from \"./Cartographic.js\";\r\nimport defined from \"./defined.js\";\r\nimport DeveloperError from \"./DeveloperError.js\";\r\nimport GeographicProjection from \"./GeographicProjection.js\";\r\nimport CesiumMath from \"./Math.js\";\r\nimport Matrix2 from \"./Matrix2.js\";\r\nimport Rectangle from \"./Rectangle.js\";\r\n\r\nvar cos = Math.cos;\r\nvar sin = Math.sin;\r\nvar sqrt = Math.sqrt;\r\n\r\n/**\r\n * @private\r\n */\r\nvar RectangleGeometryLibrary = {};\r\n\r\n/**\r\n * @private\r\n */\r\nRectangleGeometryLibrary.computePosition = function (\r\n  computedOptions,\r\n  ellipsoid,\r\n  computeST,\r\n  row,\r\n  col,\r\n  position,\r\n  st\r\n) {\r\n  var radiiSquared = ellipsoid.radiiSquared;\r\n  var nwCorner = computedOptions.nwCorner;\r\n  var rectangle = computedOptions.boundingRectangle;\r\n\r\n  var stLatitude =\r\n    nwCorner.latitude -\r\n    computedOptions.granYCos * row +\r\n    col * computedOptions.granXSin;\r\n  var cosLatitude = cos(stLatitude);\r\n  var nZ = sin(stLatitude);\r\n  var kZ = radiiSquared.z * nZ;\r\n\r\n  var stLongitude =\r\n    nwCorner.longitude +\r\n    row * computedOptions.granYSin +\r\n    col * computedOptions.granXCos;\r\n  var nX = cosLatitude * cos(stLongitude);\r\n  var nY = cosLatitude * sin(stLongitude);\r\n\r\n  var kX = radiiSquared.x * nX;\r\n  var kY = radiiSquared.y * nY;\r\n\r\n  var gamma = sqrt(kX * nX + kY * nY + kZ * nZ);\r\n\r\n  position.x = kX / gamma;\r\n  position.y = kY / gamma;\r\n  position.z = kZ / gamma;\r\n\r\n  if (computeST) {\r\n    var stNwCorner = computedOptions.stNwCorner;\r\n    if (defined(stNwCorner)) {\r\n      stLatitude =\r\n        stNwCorner.latitude -\r\n        computedOptions.stGranYCos * row +\r\n        col * computedOptions.stGranXSin;\r\n      stLongitude =\r\n        stNwCorner.longitude +\r\n        row * computedOptions.stGranYSin +\r\n        col * computedOptions.stGranXCos;\r\n\r\n      st.x = (stLongitude - computedOptions.stWest) * computedOptions.lonScalar;\r\n      st.y = (stLatitude - computedOptions.stSouth) * computedOptions.latScalar;\r\n    } else {\r\n      st.x = (stLongitude - rectangle.west) * computedOptions.lonScalar;\r\n      st.y = (stLatitude - rectangle.south) * computedOptions.latScalar;\r\n    }\r\n  }\r\n};\r\n\r\nvar rotationMatrixScratch = new Matrix2();\r\nvar nwCartesian = new Cartesian3();\r\nvar centerScratch = new Cartographic();\r\nvar centerCartesian = new Cartesian3();\r\nvar proj = new GeographicProjection();\r\n\r\nfunction getRotationOptions(\r\n  nwCorner,\r\n  rotation,\r\n  granularityX,\r\n  granularityY,\r\n  center,\r\n  width,\r\n  height\r\n) {\r\n  var cosRotation = Math.cos(rotation);\r\n  var granYCos = granularityY * cosRotation;\r\n  var granXCos = granularityX * cosRotation;\r\n\r\n  var sinRotation = Math.sin(rotation);\r\n  var granYSin = granularityY * sinRotation;\r\n  var granXSin = granularityX * sinRotation;\r\n\r\n  nwCartesian = proj.project(nwCorner, nwCartesian);\r\n\r\n  nwCartesian = Cartesian3.subtract(nwCartesian, centerCartesian, nwCartesian);\r\n  var rotationMatrix = Matrix2.fromRotation(rotation, rotationMatrixScratch);\r\n  nwCartesian = Matrix2.multiplyByVector(\r\n    rotationMatrix,\r\n    nwCartesian,\r\n    nwCartesian\r\n  );\r\n  nwCartesian = Cartesian3.add(nwCartesian, centerCartesian, nwCartesian);\r\n  nwCorner = proj.unproject(nwCartesian, nwCorner);\r\n\r\n  width -= 1;\r\n  height -= 1;\r\n\r\n  var latitude = nwCorner.latitude;\r\n  var latitude0 = latitude + width * granXSin;\r\n  var latitude1 = latitude - granYCos * height;\r\n  var latitude2 = latitude - granYCos * height + width * granXSin;\r\n\r\n  var north = Math.max(latitude, latitude0, latitude1, latitude2);\r\n  var south = Math.min(latitude, latitude0, latitude1, latitude2);\r\n\r\n  var longitude = nwCorner.longitude;\r\n  var longitude0 = longitude + width * granXCos;\r\n  var longitude1 = longitude + height * granYSin;\r\n  var longitude2 = longitude + height * granYSin + width * granXCos;\r\n\r\n  var east = Math.max(longitude, longitude0, longitude1, longitude2);\r\n  var west = Math.min(longitude, longitude0, longitude1, longitude2);\r\n\r\n  return {\r\n    north: north,\r\n    south: south,\r\n    east: east,\r\n    west: west,\r\n    granYCos: granYCos,\r\n    granYSin: granYSin,\r\n    granXCos: granXCos,\r\n    granXSin: granXSin,\r\n    nwCorner: nwCorner,\r\n  };\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nRectangleGeometryLibrary.computeOptions = function (\r\n  rectangle,\r\n  granularity,\r\n  rotation,\r\n  stRotation,\r\n  boundingRectangleScratch,\r\n  nwCornerResult,\r\n  stNwCornerResult\r\n) {\r\n  var east = rectangle.east;\r\n  var west = rectangle.west;\r\n  var north = rectangle.north;\r\n  var south = rectangle.south;\r\n\r\n  var northCap = false;\r\n  var southCap = false;\r\n\r\n  if (north === CesiumMath.PI_OVER_TWO) {\r\n    northCap = true;\r\n  }\r\n  if (south === -CesiumMath.PI_OVER_TWO) {\r\n    southCap = true;\r\n  }\r\n\r\n  var width;\r\n  var height;\r\n  var granularityX;\r\n  var granularityY;\r\n  var dx;\r\n  var dy = north - south;\r\n  if (west > east) {\r\n    dx = CesiumMath.TWO_PI - west + east;\r\n  } else {\r\n    dx = east - west;\r\n  }\r\n\r\n  width = Math.ceil(dx / granularity) + 1;\r\n  height = Math.ceil(dy / granularity) + 1;\r\n  granularityX = dx / (width - 1);\r\n  granularityY = dy / (height - 1);\r\n\r\n  var nwCorner = Rectangle.northwest(rectangle, nwCornerResult);\r\n  var center = Rectangle.center(rectangle, centerScratch);\r\n  if (rotation !== 0 || stRotation !== 0) {\r\n    if (center.longitude < nwCorner.longitude) {\r\n      center.longitude += CesiumMath.TWO_PI;\r\n    }\r\n    centerCartesian = proj.project(center, centerCartesian);\r\n  }\r\n\r\n  var granYCos = granularityY;\r\n  var granXCos = granularityX;\r\n  var granYSin = 0.0;\r\n  var granXSin = 0.0;\r\n\r\n  var boundingRectangle = Rectangle.clone(rectangle, boundingRectangleScratch);\r\n\r\n  var computedOptions = {\r\n    granYCos: granYCos,\r\n    granYSin: granYSin,\r\n    granXCos: granXCos,\r\n    granXSin: granXSin,\r\n    nwCorner: nwCorner,\r\n    boundingRectangle: boundingRectangle,\r\n    width: width,\r\n    height: height,\r\n    northCap: northCap,\r\n    southCap: southCap,\r\n  };\r\n\r\n  if (rotation !== 0) {\r\n    var rotationOptions = getRotationOptions(\r\n      nwCorner,\r\n      rotation,\r\n      granularityX,\r\n      granularityY,\r\n      center,\r\n      width,\r\n      height\r\n    );\r\n    north = rotationOptions.north;\r\n    south = rotationOptions.south;\r\n    east = rotationOptions.east;\r\n    west = rotationOptions.west;\r\n\r\n    //>>includeStart('debug', pragmas.debug);\r\n    if (\r\n      north < -CesiumMath.PI_OVER_TWO ||\r\n      north > CesiumMath.PI_OVER_TWO ||\r\n      south < -CesiumMath.PI_OVER_TWO ||\r\n      south > CesiumMath.PI_OVER_TWO\r\n    ) {\r\n      throw new DeveloperError(\r\n        \"Rotated rectangle is invalid.  It crosses over either the north or south pole.\"\r\n      );\r\n    }\r\n    //>>includeEnd('debug')\r\n\r\n    computedOptions.granYCos = rotationOptions.granYCos;\r\n    computedOptions.granYSin = rotationOptions.granYSin;\r\n    computedOptions.granXCos = rotationOptions.granXCos;\r\n    computedOptions.granXSin = rotationOptions.granXSin;\r\n\r\n    boundingRectangle.north = north;\r\n    boundingRectangle.south = south;\r\n    boundingRectangle.east = east;\r\n    boundingRectangle.west = west;\r\n  }\r\n\r\n  if (stRotation !== 0) {\r\n    rotation = rotation - stRotation;\r\n    var stNwCorner = Rectangle.northwest(boundingRectangle, stNwCornerResult);\r\n\r\n    var stRotationOptions = getRotationOptions(\r\n      stNwCorner,\r\n      rotation,\r\n      granularityX,\r\n      granularityY,\r\n      center,\r\n      width,\r\n      height\r\n    );\r\n\r\n    computedOptions.stGranYCos = stRotationOptions.granYCos;\r\n    computedOptions.stGranXCos = stRotationOptions.granXCos;\r\n    computedOptions.stGranYSin = stRotationOptions.granYSin;\r\n    computedOptions.stGranXSin = stRotationOptions.granXSin;\r\n    computedOptions.stNwCorner = stNwCorner;\r\n    computedOptions.stWest = stRotationOptions.west;\r\n    computedOptions.stSouth = stRotationOptions.south;\r\n  }\r\n\r\n  return computedOptions;\r\n};\r\nexport default RectangleGeometryLibrary;\r\n"],"names":["defined","Matrix2","Cartesian3","Cartographic","GeographicProjection","CesiumMath","Rectangle","DeveloperError"],"mappings":"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"}