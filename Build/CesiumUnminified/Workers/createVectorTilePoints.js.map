{"version":3,"file":"createVectorTilePoints.js","sources":["../../../../Source/WorkersES6/createVectorTilePoints.js"],"sourcesContent":["import AttributeCompression from \"../Core/AttributeCompression.js\";\r\nimport Cartesian3 from \"../Core/Cartesian3.js\";\r\nimport Cartographic from \"../Core/Cartographic.js\";\r\nimport Ellipsoid from \"../Core/Ellipsoid.js\";\r\nimport CesiumMath from \"../Core/Math.js\";\r\nimport Rectangle from \"../Core/Rectangle.js\";\r\nimport createTaskProcessorWorker from \"./createTaskProcessorWorker.js\";\r\n\r\nvar maxShort = 32767;\r\n\r\nvar scratchBVCartographic = new Cartographic();\r\nvar scratchEncodedPosition = new Cartesian3();\r\n\r\nvar scratchRectangle = new Rectangle();\r\nvar scratchEllipsoid = new Ellipsoid();\r\nvar scratchMinMaxHeights = {\r\n  min: undefined,\r\n  max: undefined,\r\n};\r\n\r\nfunction unpackBuffer(packedBuffer) {\r\n  packedBuffer = new Float64Array(packedBuffer);\r\n\r\n  var offset = 0;\r\n  scratchMinMaxHeights.min = packedBuffer[offset++];\r\n  scratchMinMaxHeights.max = packedBuffer[offset++];\r\n\r\n  Rectangle.unpack(packedBuffer, offset, scratchRectangle);\r\n  offset += Rectangle.packedLength;\r\n\r\n  Ellipsoid.unpack(packedBuffer, offset, scratchEllipsoid);\r\n}\r\n\r\nfunction createVectorTilePoints(parameters, transferableObjects) {\r\n  var positions = new Uint16Array(parameters.positions);\r\n\r\n  unpackBuffer(parameters.packedBuffer);\r\n  var rectangle = scratchRectangle;\r\n  var ellipsoid = scratchEllipsoid;\r\n  var minimumHeight = scratchMinMaxHeights.min;\r\n  var maximumHeight = scratchMinMaxHeights.max;\r\n\r\n  var positionsLength = positions.length / 3;\r\n  var uBuffer = positions.subarray(0, positionsLength);\r\n  var vBuffer = positions.subarray(positionsLength, 2 * positionsLength);\r\n  var heightBuffer = positions.subarray(\r\n    2 * positionsLength,\r\n    3 * positionsLength\r\n  );\r\n  AttributeCompression.zigZagDeltaDecode(uBuffer, vBuffer, heightBuffer);\r\n\r\n  var decoded = new Float64Array(positions.length);\r\n  for (var i = 0; i < positionsLength; ++i) {\r\n    var u = uBuffer[i];\r\n    var v = vBuffer[i];\r\n    var h = heightBuffer[i];\r\n\r\n    var lon = CesiumMath.lerp(rectangle.west, rectangle.east, u / maxShort);\r\n    var lat = CesiumMath.lerp(rectangle.south, rectangle.north, v / maxShort);\r\n    var alt = CesiumMath.lerp(minimumHeight, maximumHeight, h / maxShort);\r\n\r\n    var cartographic = Cartographic.fromRadians(\r\n      lon,\r\n      lat,\r\n      alt,\r\n      scratchBVCartographic\r\n    );\r\n    var decodedPosition = ellipsoid.cartographicToCartesian(\r\n      cartographic,\r\n      scratchEncodedPosition\r\n    );\r\n    Cartesian3.pack(decodedPosition, decoded, i * 3);\r\n  }\r\n\r\n  transferableObjects.push(decoded.buffer);\r\n\r\n  return {\r\n    positions: decoded.buffer,\r\n  };\r\n}\r\nexport default createTaskProcessorWorker(createVectorTilePoints);\r\n"],"names":["Cartographic","Cartesian3","Rectangle","Ellipsoid","AttributeCompression","CesiumMath"],"mappings":"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"}