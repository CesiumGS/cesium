{"version":3,"file":"createRectangleOutlineGeometry.js","sources":["../../../../Source/Core/RectangleOutlineGeometry.js","../../../../Source/WorkersES6/createRectangleOutlineGeometry.js"],"sourcesContent":["import arrayFill from \"./arrayFill.js\";\r\nimport BoundingSphere from \"./BoundingSphere.js\";\r\nimport Cartesian3 from \"./Cartesian3.js\";\r\nimport Cartographic from \"./Cartographic.js\";\r\nimport ComponentDatatype from \"./ComponentDatatype.js\";\r\nimport defaultValue from \"./defaultValue.js\";\r\nimport defined from \"./defined.js\";\r\nimport DeveloperError from \"./DeveloperError.js\";\r\nimport Ellipsoid from \"./Ellipsoid.js\";\r\nimport Geometry from \"./Geometry.js\";\r\nimport GeometryAttribute from \"./GeometryAttribute.js\";\r\nimport GeometryAttributes from \"./GeometryAttributes.js\";\r\nimport GeometryOffsetAttribute from \"./GeometryOffsetAttribute.js\";\r\nimport IndexDatatype from \"./IndexDatatype.js\";\r\nimport CesiumMath from \"./Math.js\";\r\nimport PolygonPipeline from \"./PolygonPipeline.js\";\r\nimport PrimitiveType from \"./PrimitiveType.js\";\r\nimport Rectangle from \"./Rectangle.js\";\r\nimport RectangleGeometryLibrary from \"./RectangleGeometryLibrary.js\";\r\n\r\nvar bottomBoundingSphere = new BoundingSphere();\r\nvar topBoundingSphere = new BoundingSphere();\r\nvar positionScratch = new Cartesian3();\r\nvar rectangleScratch = new Rectangle();\r\n\r\nfunction constructRectangle(geometry, computedOptions) {\r\n  var ellipsoid = geometry._ellipsoid;\r\n  var height = computedOptions.height;\r\n  var width = computedOptions.width;\r\n  var northCap = computedOptions.northCap;\r\n  var southCap = computedOptions.southCap;\r\n\r\n  var rowHeight = height;\r\n  var widthMultiplier = 2;\r\n  var size = 0;\r\n  var corners = 4;\r\n  if (northCap) {\r\n    widthMultiplier -= 1;\r\n    rowHeight -= 1;\r\n    size += 1;\r\n    corners -= 2;\r\n  }\r\n  if (southCap) {\r\n    widthMultiplier -= 1;\r\n    rowHeight -= 1;\r\n    size += 1;\r\n    corners -= 2;\r\n  }\r\n  size += widthMultiplier * width + 2 * rowHeight - corners;\r\n\r\n  var positions = new Float64Array(size * 3);\r\n\r\n  var posIndex = 0;\r\n  var row = 0;\r\n  var col;\r\n  var position = positionScratch;\r\n  if (northCap) {\r\n    RectangleGeometryLibrary.computePosition(\r\n      computedOptions,\r\n      ellipsoid,\r\n      false,\r\n      row,\r\n      0,\r\n      position\r\n    );\r\n    positions[posIndex++] = position.x;\r\n    positions[posIndex++] = position.y;\r\n    positions[posIndex++] = position.z;\r\n  } else {\r\n    for (col = 0; col < width; col++) {\r\n      RectangleGeometryLibrary.computePosition(\r\n        computedOptions,\r\n        ellipsoid,\r\n        false,\r\n        row,\r\n        col,\r\n        position\r\n      );\r\n      positions[posIndex++] = position.x;\r\n      positions[posIndex++] = position.y;\r\n      positions[posIndex++] = position.z;\r\n    }\r\n  }\r\n\r\n  col = width - 1;\r\n  for (row = 1; row < height; row++) {\r\n    RectangleGeometryLibrary.computePosition(\r\n      computedOptions,\r\n      ellipsoid,\r\n      false,\r\n      row,\r\n      col,\r\n      position\r\n    );\r\n    positions[posIndex++] = position.x;\r\n    positions[posIndex++] = position.y;\r\n    positions[posIndex++] = position.z;\r\n  }\r\n\r\n  row = height - 1;\r\n  if (!southCap) {\r\n    // if southCap is true, we dont need to add any more points because the south pole point was added by the iteration above\r\n    for (col = width - 2; col >= 0; col--) {\r\n      RectangleGeometryLibrary.computePosition(\r\n        computedOptions,\r\n        ellipsoid,\r\n        false,\r\n        row,\r\n        col,\r\n        position\r\n      );\r\n      positions[posIndex++] = position.x;\r\n      positions[posIndex++] = position.y;\r\n      positions[posIndex++] = position.z;\r\n    }\r\n  }\r\n\r\n  col = 0;\r\n  for (row = height - 2; row > 0; row--) {\r\n    RectangleGeometryLibrary.computePosition(\r\n      computedOptions,\r\n      ellipsoid,\r\n      false,\r\n      row,\r\n      col,\r\n      position\r\n    );\r\n    positions[posIndex++] = position.x;\r\n    positions[posIndex++] = position.y;\r\n    positions[posIndex++] = position.z;\r\n  }\r\n\r\n  var indicesSize = (positions.length / 3) * 2;\r\n  var indices = IndexDatatype.createTypedArray(\r\n    positions.length / 3,\r\n    indicesSize\r\n  );\r\n\r\n  var index = 0;\r\n  for (var i = 0; i < positions.length / 3 - 1; i++) {\r\n    indices[index++] = i;\r\n    indices[index++] = i + 1;\r\n  }\r\n  indices[index++] = positions.length / 3 - 1;\r\n  indices[index++] = 0;\r\n\r\n  var geo = new Geometry({\r\n    attributes: new GeometryAttributes(),\r\n    primitiveType: PrimitiveType.LINES,\r\n  });\r\n\r\n  geo.attributes.position = new GeometryAttribute({\r\n    componentDatatype: ComponentDatatype.DOUBLE,\r\n    componentsPerAttribute: 3,\r\n    values: positions,\r\n  });\r\n  geo.indices = indices;\r\n\r\n  return geo;\r\n}\r\n\r\nfunction constructExtrudedRectangle(rectangleGeometry, computedOptions) {\r\n  var surfaceHeight = rectangleGeometry._surfaceHeight;\r\n  var extrudedHeight = rectangleGeometry._extrudedHeight;\r\n  var ellipsoid = rectangleGeometry._ellipsoid;\r\n  var minHeight = extrudedHeight;\r\n  var maxHeight = surfaceHeight;\r\n  var geo = constructRectangle(rectangleGeometry, computedOptions);\r\n\r\n  var height = computedOptions.height;\r\n  var width = computedOptions.width;\r\n\r\n  var topPositions = PolygonPipeline.scaleToGeodeticHeight(\r\n    geo.attributes.position.values,\r\n    maxHeight,\r\n    ellipsoid,\r\n    false\r\n  );\r\n  var length = topPositions.length;\r\n  var positions = new Float64Array(length * 2);\r\n  positions.set(topPositions);\r\n  var bottomPositions = PolygonPipeline.scaleToGeodeticHeight(\r\n    geo.attributes.position.values,\r\n    minHeight,\r\n    ellipsoid\r\n  );\r\n  positions.set(bottomPositions, length);\r\n  geo.attributes.position.values = positions;\r\n\r\n  var northCap = computedOptions.northCap;\r\n  var southCap = computedOptions.southCap;\r\n  var corners = 4;\r\n  if (northCap) {\r\n    corners -= 1;\r\n  }\r\n  if (southCap) {\r\n    corners -= 1;\r\n  }\r\n\r\n  var indicesSize = (positions.length / 3 + corners) * 2;\r\n  var indices = IndexDatatype.createTypedArray(\r\n    positions.length / 3,\r\n    indicesSize\r\n  );\r\n  length = positions.length / 6;\r\n  var index = 0;\r\n  for (var i = 0; i < length - 1; i++) {\r\n    indices[index++] = i;\r\n    indices[index++] = i + 1;\r\n    indices[index++] = i + length;\r\n    indices[index++] = i + length + 1;\r\n  }\r\n  indices[index++] = length - 1;\r\n  indices[index++] = 0;\r\n  indices[index++] = length + length - 1;\r\n  indices[index++] = length;\r\n\r\n  indices[index++] = 0;\r\n  indices[index++] = length;\r\n\r\n  var bottomCorner;\r\n  if (northCap) {\r\n    bottomCorner = height - 1;\r\n  } else {\r\n    var topRightCorner = width - 1;\r\n    indices[index++] = topRightCorner;\r\n    indices[index++] = topRightCorner + length;\r\n    bottomCorner = width + height - 2;\r\n  }\r\n\r\n  indices[index++] = bottomCorner;\r\n  indices[index++] = bottomCorner + length;\r\n\r\n  if (!southCap) {\r\n    var bottomLeftCorner = width + bottomCorner - 1;\r\n    indices[index++] = bottomLeftCorner;\r\n    indices[index] = bottomLeftCorner + length;\r\n  }\r\n\r\n  geo.indices = indices;\r\n\r\n  return geo;\r\n}\r\n\r\n/**\r\n * A description of the outline of a a cartographic rectangle on an ellipsoid centered at the origin.\r\n *\r\n * @alias RectangleOutlineGeometry\r\n * @constructor\r\n *\r\n * @param {Object} options Object with the following properties:\r\n * @param {Rectangle} options.rectangle A cartographic rectangle with north, south, east and west properties in radians.\r\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid on which the rectangle lies.\r\n * @param {Number} [options.granularity=CesiumMath.RADIANS_PER_DEGREE] The distance, in radians, between each latitude and longitude. Determines the number of positions in the buffer.\r\n * @param {Number} [options.height=0.0] The distance in meters between the rectangle and the ellipsoid surface.\r\n * @param {Number} [options.rotation=0.0] The rotation of the rectangle, in radians. A positive rotation is counter-clockwise.\r\n * @param {Number} [options.extrudedHeight] The distance in meters between the rectangle's extruded face and the ellipsoid surface.\r\n *\r\n * @exception {DeveloperError} <code>options.rectangle.north</code> must be in the interval [<code>-Pi/2</code>, <code>Pi/2</code>].\r\n * @exception {DeveloperError} <code>options.rectangle.south</code> must be in the interval [<code>-Pi/2</code>, <code>Pi/2</code>].\r\n * @exception {DeveloperError} <code>options.rectangle.east</code> must be in the interval [<code>-Pi</code>, <code>Pi</code>].\r\n * @exception {DeveloperError} <code>options.rectangle.west</code> must be in the interval [<code>-Pi</code>, <code>Pi</code>].\r\n * @exception {DeveloperError} <code>options.rectangle.north</code> must be greater than <code>rectangle.south</code>.\r\n *\r\n * @see RectangleOutlineGeometry#createGeometry\r\n *\r\n * @example\r\n * var rectangle = new Cesium.RectangleOutlineGeometry({\r\n *   ellipsoid : Cesium.Ellipsoid.WGS84,\r\n *   rectangle : Cesium.Rectangle.fromDegrees(-80.0, 39.0, -74.0, 42.0),\r\n *   height : 10000.0\r\n * });\r\n * var geometry = Cesium.RectangleOutlineGeometry.createGeometry(rectangle);\r\n */\r\nfunction RectangleOutlineGeometry(options) {\r\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n\r\n  var rectangle = options.rectangle;\r\n  var granularity = defaultValue(\r\n    options.granularity,\r\n    CesiumMath.RADIANS_PER_DEGREE\r\n  );\r\n  var ellipsoid = defaultValue(options.ellipsoid, Ellipsoid.WGS84);\r\n  var rotation = defaultValue(options.rotation, 0.0);\r\n\r\n  //>>includeStart('debug', pragmas.debug);\r\n  if (!defined(rectangle)) {\r\n    throw new DeveloperError(\"rectangle is required.\");\r\n  }\r\n  Rectangle.validate(rectangle);\r\n  if (rectangle.north < rectangle.south) {\r\n    throw new DeveloperError(\r\n      \"options.rectangle.north must be greater than options.rectangle.south\"\r\n    );\r\n  }\r\n  //>>includeEnd('debug');\r\n\r\n  var height = defaultValue(options.height, 0.0);\r\n  var extrudedHeight = defaultValue(options.extrudedHeight, height);\r\n\r\n  this._rectangle = Rectangle.clone(rectangle);\r\n  this._granularity = granularity;\r\n  this._ellipsoid = ellipsoid;\r\n  this._surfaceHeight = Math.max(height, extrudedHeight);\r\n  this._rotation = rotation;\r\n  this._extrudedHeight = Math.min(height, extrudedHeight);\r\n  this._offsetAttribute = options.offsetAttribute;\r\n  this._workerName = \"createRectangleOutlineGeometry\";\r\n}\r\n\r\n/**\r\n * The number of elements used to pack the object into an array.\r\n * @type {Number}\r\n */\r\nRectangleOutlineGeometry.packedLength =\r\n  Rectangle.packedLength + Ellipsoid.packedLength + 5;\r\n\r\n/**\r\n * Stores the provided instance into the provided array.\r\n *\r\n * @param {RectangleOutlineGeometry} value The value to pack.\r\n * @param {Number[]} array The array to pack into.\r\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\r\n *\r\n * @returns {Number[]} The array that was packed into\r\n */\r\nRectangleOutlineGeometry.pack = function (value, array, startingIndex) {\r\n  //>>includeStart('debug', pragmas.debug);\r\n  if (!defined(value)) {\r\n    throw new DeveloperError(\"value is required\");\r\n  }\r\n\r\n  if (!defined(array)) {\r\n    throw new DeveloperError(\"array is required\");\r\n  }\r\n  //>>includeEnd('debug');\r\n\r\n  startingIndex = defaultValue(startingIndex, 0);\r\n\r\n  Rectangle.pack(value._rectangle, array, startingIndex);\r\n  startingIndex += Rectangle.packedLength;\r\n\r\n  Ellipsoid.pack(value._ellipsoid, array, startingIndex);\r\n  startingIndex += Ellipsoid.packedLength;\r\n\r\n  array[startingIndex++] = value._granularity;\r\n  array[startingIndex++] = value._surfaceHeight;\r\n  array[startingIndex++] = value._rotation;\r\n  array[startingIndex++] = value._extrudedHeight;\r\n  array[startingIndex] = defaultValue(value._offsetAttribute, -1);\r\n\r\n  return array;\r\n};\r\n\r\nvar scratchRectangle = new Rectangle();\r\nvar scratchEllipsoid = Ellipsoid.clone(Ellipsoid.UNIT_SPHERE);\r\nvar scratchOptions = {\r\n  rectangle: scratchRectangle,\r\n  ellipsoid: scratchEllipsoid,\r\n  granularity: undefined,\r\n  height: undefined,\r\n  rotation: undefined,\r\n  extrudedHeight: undefined,\r\n  offsetAttribute: undefined,\r\n};\r\n\r\n/**\r\n * Retrieves an instance from a packed array.\r\n *\r\n * @param {Number[]} array The packed array.\r\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\r\n * @param {RectangleOutlineGeometry} [result] The object into which to store the result.\r\n * @returns {RectangleOutlineGeometry} The modified result parameter or a new Quaternion instance if one was not provided.\r\n */\r\nRectangleOutlineGeometry.unpack = function (array, startingIndex, result) {\r\n  //>>includeStart('debug', pragmas.debug);\r\n  if (!defined(array)) {\r\n    throw new DeveloperError(\"array is required\");\r\n  }\r\n  //>>includeEnd('debug');\r\n\r\n  startingIndex = defaultValue(startingIndex, 0);\r\n\r\n  var rectangle = Rectangle.unpack(array, startingIndex, scratchRectangle);\r\n  startingIndex += Rectangle.packedLength;\r\n\r\n  var ellipsoid = Ellipsoid.unpack(array, startingIndex, scratchEllipsoid);\r\n  startingIndex += Ellipsoid.packedLength;\r\n\r\n  var granularity = array[startingIndex++];\r\n  var height = array[startingIndex++];\r\n  var rotation = array[startingIndex++];\r\n  var extrudedHeight = array[startingIndex++];\r\n  var offsetAttribute = array[startingIndex];\r\n\r\n  if (!defined(result)) {\r\n    scratchOptions.granularity = granularity;\r\n    scratchOptions.height = height;\r\n    scratchOptions.rotation = rotation;\r\n    scratchOptions.extrudedHeight = extrudedHeight;\r\n    scratchOptions.offsetAttribute =\r\n      offsetAttribute === -1 ? undefined : offsetAttribute;\r\n\r\n    return new RectangleOutlineGeometry(scratchOptions);\r\n  }\r\n\r\n  result._rectangle = Rectangle.clone(rectangle, result._rectangle);\r\n  result._ellipsoid = Ellipsoid.clone(ellipsoid, result._ellipsoid);\r\n  result._surfaceHeight = height;\r\n  result._rotation = rotation;\r\n  result._extrudedHeight = extrudedHeight;\r\n  result._offsetAttribute =\r\n    offsetAttribute === -1 ? undefined : offsetAttribute;\r\n\r\n  return result;\r\n};\r\n\r\nvar nwScratch = new Cartographic();\r\n/**\r\n * Computes the geometric representation of an outline of a rectangle, including its vertices, indices, and a bounding sphere.\r\n *\r\n * @param {RectangleOutlineGeometry} rectangleGeometry A description of the rectangle outline.\r\n * @returns {Geometry|undefined} The computed vertices and indices.\r\n *\r\n * @exception {DeveloperError} Rotated rectangle is invalid.\r\n */\r\nRectangleOutlineGeometry.createGeometry = function (rectangleGeometry) {\r\n  var rectangle = rectangleGeometry._rectangle;\r\n  var ellipsoid = rectangleGeometry._ellipsoid;\r\n  var computedOptions = RectangleGeometryLibrary.computeOptions(\r\n    rectangle,\r\n    rectangleGeometry._granularity,\r\n    rectangleGeometry._rotation,\r\n    0,\r\n    rectangleScratch,\r\n    nwScratch\r\n  );\r\n\r\n  var geometry;\r\n  var boundingSphere;\r\n\r\n  if (\r\n    CesiumMath.equalsEpsilon(\r\n      rectangle.north,\r\n      rectangle.south,\r\n      CesiumMath.EPSILON10\r\n    ) ||\r\n    CesiumMath.equalsEpsilon(\r\n      rectangle.east,\r\n      rectangle.west,\r\n      CesiumMath.EPSILON10\r\n    )\r\n  ) {\r\n    return undefined;\r\n  }\r\n\r\n  var surfaceHeight = rectangleGeometry._surfaceHeight;\r\n  var extrudedHeight = rectangleGeometry._extrudedHeight;\r\n  var extrude = !CesiumMath.equalsEpsilon(\r\n    surfaceHeight,\r\n    extrudedHeight,\r\n    0,\r\n    CesiumMath.EPSILON2\r\n  );\r\n  var offsetValue;\r\n  if (extrude) {\r\n    geometry = constructExtrudedRectangle(rectangleGeometry, computedOptions);\r\n    if (defined(rectangleGeometry._offsetAttribute)) {\r\n      var size = geometry.attributes.position.values.length / 3;\r\n      var offsetAttribute = new Uint8Array(size);\r\n      if (rectangleGeometry._offsetAttribute === GeometryOffsetAttribute.TOP) {\r\n        offsetAttribute = arrayFill(offsetAttribute, 1, 0, size / 2);\r\n      } else {\r\n        offsetValue =\r\n          rectangleGeometry._offsetAttribute === GeometryOffsetAttribute.NONE\r\n            ? 0\r\n            : 1;\r\n        offsetAttribute = arrayFill(offsetAttribute, offsetValue);\r\n      }\r\n\r\n      geometry.attributes.applyOffset = new GeometryAttribute({\r\n        componentDatatype: ComponentDatatype.UNSIGNED_BYTE,\r\n        componentsPerAttribute: 1,\r\n        values: offsetAttribute,\r\n      });\r\n    }\r\n    var topBS = BoundingSphere.fromRectangle3D(\r\n      rectangle,\r\n      ellipsoid,\r\n      surfaceHeight,\r\n      topBoundingSphere\r\n    );\r\n    var bottomBS = BoundingSphere.fromRectangle3D(\r\n      rectangle,\r\n      ellipsoid,\r\n      extrudedHeight,\r\n      bottomBoundingSphere\r\n    );\r\n    boundingSphere = BoundingSphere.union(topBS, bottomBS);\r\n  } else {\r\n    geometry = constructRectangle(rectangleGeometry, computedOptions);\r\n    geometry.attributes.position.values = PolygonPipeline.scaleToGeodeticHeight(\r\n      geometry.attributes.position.values,\r\n      surfaceHeight,\r\n      ellipsoid,\r\n      false\r\n    );\r\n\r\n    if (defined(rectangleGeometry._offsetAttribute)) {\r\n      var length = geometry.attributes.position.values.length;\r\n      var applyOffset = new Uint8Array(length / 3);\r\n      offsetValue =\r\n        rectangleGeometry._offsetAttribute === GeometryOffsetAttribute.NONE\r\n          ? 0\r\n          : 1;\r\n      arrayFill(applyOffset, offsetValue);\r\n      geometry.attributes.applyOffset = new GeometryAttribute({\r\n        componentDatatype: ComponentDatatype.UNSIGNED_BYTE,\r\n        componentsPerAttribute: 1,\r\n        values: applyOffset,\r\n      });\r\n    }\r\n\r\n    boundingSphere = BoundingSphere.fromRectangle3D(\r\n      rectangle,\r\n      ellipsoid,\r\n      surfaceHeight\r\n    );\r\n  }\r\n\r\n  return new Geometry({\r\n    attributes: geometry.attributes,\r\n    indices: geometry.indices,\r\n    primitiveType: PrimitiveType.LINES,\r\n    boundingSphere: boundingSphere,\r\n    offsetAttribute: rectangleGeometry._offsetAttribute,\r\n  });\r\n};\r\nexport default RectangleOutlineGeometry;\r\n","import defined from \"../Core/defined.js\";\r\nimport Ellipsoid from \"../Core/Ellipsoid.js\";\r\nimport Rectangle from \"../Core/Rectangle.js\";\r\nimport RectangleOutlineGeometry from \"../Core/RectangleOutlineGeometry.js\";\r\n\r\nfunction createRectangleOutlineGeometry(rectangleGeometry, offset) {\r\n  if (defined(offset)) {\r\n    rectangleGeometry = RectangleOutlineGeometry.unpack(\r\n      rectangleGeometry,\r\n      offset\r\n    );\r\n  }\r\n  rectangleGeometry._ellipsoid = Ellipsoid.clone(rectangleGeometry._ellipsoid);\r\n  rectangleGeometry._rectangle = Rectangle.clone(rectangleGeometry._rectangle);\r\n  return RectangleOutlineGeometry.createGeometry(rectangleGeometry);\r\n}\r\nexport default createRectangleOutlineGeometry;\r\n"],"names":["BoundingSphere","Cartesian3","Rectangle","RectangleGeometryLibrary","IndexDatatype","Geometry","GeometryAttributes","PrimitiveType","GeometryAttribute","ComponentDatatype","PolygonPipeline","defaultValue","CesiumMath","Ellipsoid","defined","DeveloperError","Cartographic","GeometryOffsetAttribute","arrayFill"],"mappings":"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"}