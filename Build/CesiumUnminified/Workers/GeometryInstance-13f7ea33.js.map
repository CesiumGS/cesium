{"version":3,"file":"GeometryInstance-13f7ea33.js","sources":["../../../../Source/Core/GeometryInstance.js"],"sourcesContent":["import defaultValue from \"./defaultValue.js\";\r\nimport defined from \"./defined.js\";\r\nimport DeveloperError from \"./DeveloperError.js\";\r\nimport Matrix4 from \"./Matrix4.js\";\r\n\r\n/**\r\n * Geometry instancing allows one {@link Geometry} object to be positions in several\r\n * different locations and colored uniquely.  For example, one {@link BoxGeometry} can\r\n * be instanced several times, each with a different <code>modelMatrix</code> to change\r\n * its position, rotation, and scale.\r\n *\r\n * @alias GeometryInstance\r\n * @constructor\r\n *\r\n * @param {Object} options Object with the following properties:\r\n * @param {Geometry|GeometryFactory} options.geometry The geometry to instance.\r\n * @param {Matrix4} [options.modelMatrix=Matrix4.IDENTITY] The model matrix that transforms to transform the geometry from model to world coordinates.\r\n * @param {Object} [options.id] A user-defined object to return when the instance is picked with {@link Scene#pick} or get/set per-instance attributes with {@link Primitive#getGeometryInstanceAttributes}.\r\n * @param {Object} [options.attributes] Per-instance attributes like a show or color attribute shown in the example below.\r\n *\r\n *\r\n * @example\r\n * // Create geometry for a box, and two instances that refer to it.\r\n * // One instance positions the box on the bottom and colored aqua.\r\n * // The other instance positions the box on the top and color white.\r\n * var geometry = Cesium.BoxGeometry.fromDimensions({\r\n *   vertexFormat : Cesium.VertexFormat.POSITION_AND_NORMAL,\r\n *   dimensions : new Cesium.Cartesian3(1000000.0, 1000000.0, 500000.0)\r\n * });\r\n * var instanceBottom = new Cesium.GeometryInstance({\r\n *   geometry : geometry,\r\n *   modelMatrix : Cesium.Matrix4.multiplyByTranslation(Cesium.Transforms.eastNorthUpToFixedFrame(\r\n *     Cesium.Cartesian3.fromDegrees(-75.59777, 40.03883)), new Cesium.Cartesian3(0.0, 0.0, 1000000.0), new Cesium.Matrix4()),\r\n *   attributes : {\r\n *     color : Cesium.ColorGeometryInstanceAttribute.fromColor(Cesium.Color.AQUA)\r\n *   },\r\n *   id : 'bottom'\r\n * });\r\n * var instanceTop = new Cesium.GeometryInstance({\r\n *   geometry : geometry,\r\n *   modelMatrix : Cesium.Matrix4.multiplyByTranslation(Cesium.Transforms.eastNorthUpToFixedFrame(\r\n *     Cesium.Cartesian3.fromDegrees(-75.59777, 40.03883)), new Cesium.Cartesian3(0.0, 0.0, 3000000.0), new Cesium.Matrix4()),\r\n *   attributes : {\r\n *     color : Cesium.ColorGeometryInstanceAttribute.fromColor(Cesium.Color.AQUA)\r\n *   },\r\n *   id : 'top'\r\n * });\r\n *\r\n * @see Geometry\r\n */\r\nfunction GeometryInstance(options) {\r\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n\r\n  //>>includeStart('debug', pragmas.debug);\r\n  if (!defined(options.geometry)) {\r\n    throw new DeveloperError(\"options.geometry is required.\");\r\n  }\r\n  //>>includeEnd('debug');\r\n\r\n  /**\r\n   * The geometry being instanced.\r\n   *\r\n   * @type Geometry\r\n   *\r\n   * @default undefined\r\n   */\r\n  this.geometry = options.geometry;\r\n\r\n  /**\r\n   * The 4x4 transformation matrix that transforms the geometry from model to world coordinates.\r\n   * When this is the identity matrix, the geometry is drawn in world coordinates, i.e., Earth's WGS84 coordinates.\r\n   * Local reference frames can be used by providing a different transformation matrix, like that returned\r\n   * by {@link Transforms.eastNorthUpToFixedFrame}.\r\n   *\r\n   * @type Matrix4\r\n   *\r\n   * @default Matrix4.IDENTITY\r\n   */\r\n  this.modelMatrix = Matrix4.clone(\r\n    defaultValue(options.modelMatrix, Matrix4.IDENTITY)\r\n  );\r\n\r\n  /**\r\n   * User-defined object returned when the instance is picked or used to get/set per-instance attributes.\r\n   *\r\n   * @type Object\r\n   *\r\n   * @default undefined\r\n   *\r\n   * @see Scene#pick\r\n   * @see Primitive#getGeometryInstanceAttributes\r\n   */\r\n  this.id = options.id;\r\n\r\n  /**\r\n   * Used for picking primitives that wrap geometry instances.\r\n   *\r\n   * @private\r\n   */\r\n  this.pickPrimitive = options.pickPrimitive;\r\n\r\n  /**\r\n   * Per-instance attributes like {@link ColorGeometryInstanceAttribute} or {@link ShowGeometryInstanceAttribute}.\r\n   * {@link Geometry} attributes varying per vertex; these attributes are constant for the entire instance.\r\n   *\r\n   * @type Object\r\n   *\r\n   * @default undefined\r\n   */\r\n  this.attributes = defaultValue(options.attributes, {});\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  this.westHemisphereGeometry = undefined;\r\n  /**\r\n   * @private\r\n   */\r\n  this.eastHemisphereGeometry = undefined;\r\n}\r\nexport default GeometryInstance;\r\n"],"names":["defaultValue","defined","DeveloperError","Matrix4"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;EAKA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,SAAS,gBAAgB,CAAC,OAAO,EAAE;EACnC,EAAE,OAAO,GAAGA,iBAAY,CAAC,OAAO,EAAEA,iBAAY,CAAC,YAAY,CAAC,CAAC;AAC7D;EACA;EACA,EAAE,IAAI,CAACC,YAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;EAClC,IAAI,MAAM,IAAIC,oBAAc,CAAC,+BAA+B,CAAC,CAAC;EAC9D,GAAG;EACH;AACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AACnC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,WAAW,GAAGC,kBAAO,CAAC,KAAK;EAClC,IAAIH,iBAAY,CAAC,OAAO,CAAC,WAAW,EAAEG,kBAAO,CAAC,QAAQ,CAAC;EACvD,GAAG,CAAC;AACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;AACvB;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;AAC7C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,UAAU,GAAGH,iBAAY,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;AACzD;EACA;EACA;EACA;EACA,EAAE,IAAI,CAAC,sBAAsB,GAAG,SAAS,CAAC;EAC1C;EACA;EACA;EACA,EAAE,IAAI,CAAC,sBAAsB,GAAG,SAAS,CAAC;EAC1C;;;;;;;;"}