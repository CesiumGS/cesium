{"version":3,"file":"createPlaneGeometry.js","sources":["../../../../Source/Core/PlaneGeometry.js","../../../../Source/WorkersES6/createPlaneGeometry.js"],"sourcesContent":["import BoundingSphere from \"./BoundingSphere.js\";\r\nimport Cartesian3 from \"./Cartesian3.js\";\r\nimport Check from \"./Check.js\";\r\nimport ComponentDatatype from \"./ComponentDatatype.js\";\r\nimport defaultValue from \"./defaultValue.js\";\r\nimport defined from \"./defined.js\";\r\nimport Geometry from \"./Geometry.js\";\r\nimport GeometryAttribute from \"./GeometryAttribute.js\";\r\nimport GeometryAttributes from \"./GeometryAttributes.js\";\r\nimport PrimitiveType from \"./PrimitiveType.js\";\r\nimport VertexFormat from \"./VertexFormat.js\";\r\n\r\n/**\r\n * Describes geometry representing a plane centered at the origin, with a unit width and length.\r\n *\r\n * @alias PlaneGeometry\r\n * @constructor\r\n *\r\n * @param {Object} [options] Object with the following properties:\r\n * @param {VertexFormat} [options.vertexFormat=VertexFormat.DEFAULT] The vertex attributes to be computed.\r\n *\r\n * @example\r\n * var planeGeometry = new Cesium.PlaneGeometry({\r\n *   vertexFormat : Cesium.VertexFormat.POSITION_ONLY\r\n * });\r\n */\r\nfunction PlaneGeometry(options) {\r\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n\r\n  var vertexFormat = defaultValue(options.vertexFormat, VertexFormat.DEFAULT);\r\n\r\n  this._vertexFormat = vertexFormat;\r\n  this._workerName = \"createPlaneGeometry\";\r\n}\r\n\r\n/**\r\n * The number of elements used to pack the object into an array.\r\n * @type {Number}\r\n */\r\nPlaneGeometry.packedLength = VertexFormat.packedLength;\r\n\r\n/**\r\n * Stores the provided instance into the provided array.\r\n *\r\n * @param {PlaneGeometry} value The value to pack.\r\n * @param {Number[]} array The array to pack into.\r\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\r\n *\r\n * @returns {Number[]} The array that was packed into\r\n */\r\nPlaneGeometry.pack = function (value, array, startingIndex) {\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.typeOf.object(\"value\", value);\r\n  Check.defined(\"array\", array);\r\n  //>>includeEnd('debug');\r\n\r\n  startingIndex = defaultValue(startingIndex, 0);\r\n\r\n  VertexFormat.pack(value._vertexFormat, array, startingIndex);\r\n\r\n  return array;\r\n};\r\n\r\nvar scratchVertexFormat = new VertexFormat();\r\nvar scratchOptions = {\r\n  vertexFormat: scratchVertexFormat,\r\n};\r\n\r\n/**\r\n * Retrieves an instance from a packed array.\r\n *\r\n * @param {Number[]} array The packed array.\r\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\r\n * @param {PlaneGeometry} [result] The object into which to store the result.\r\n * @returns {PlaneGeometry} The modified result parameter or a new PlaneGeometry instance if one was not provided.\r\n */\r\nPlaneGeometry.unpack = function (array, startingIndex, result) {\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.defined(\"array\", array);\r\n  //>>includeEnd('debug');\r\n\r\n  startingIndex = defaultValue(startingIndex, 0);\r\n\r\n  var vertexFormat = VertexFormat.unpack(\r\n    array,\r\n    startingIndex,\r\n    scratchVertexFormat\r\n  );\r\n\r\n  if (!defined(result)) {\r\n    return new PlaneGeometry(scratchOptions);\r\n  }\r\n\r\n  result._vertexFormat = VertexFormat.clone(vertexFormat, result._vertexFormat);\r\n\r\n  return result;\r\n};\r\n\r\nvar min = new Cartesian3(-0.5, -0.5, 0.0);\r\nvar max = new Cartesian3(0.5, 0.5, 0.0);\r\n\r\n/**\r\n * Computes the geometric representation of a plane, including its vertices, indices, and a bounding sphere.\r\n *\r\n * @param {PlaneGeometry} planeGeometry A description of the plane.\r\n * @returns {Geometry|undefined} The computed vertices and indices.\r\n */\r\nPlaneGeometry.createGeometry = function (planeGeometry) {\r\n  var vertexFormat = planeGeometry._vertexFormat;\r\n\r\n  var attributes = new GeometryAttributes();\r\n  var indices;\r\n  var positions;\r\n\r\n  if (vertexFormat.position) {\r\n    // 4 corner points.  Duplicated 3 times each for each incident edge/face.\r\n    positions = new Float64Array(4 * 3);\r\n\r\n    // +z face\r\n    positions[0] = min.x;\r\n    positions[1] = min.y;\r\n    positions[2] = 0.0;\r\n    positions[3] = max.x;\r\n    positions[4] = min.y;\r\n    positions[5] = 0.0;\r\n    positions[6] = max.x;\r\n    positions[7] = max.y;\r\n    positions[8] = 0.0;\r\n    positions[9] = min.x;\r\n    positions[10] = max.y;\r\n    positions[11] = 0.0;\r\n\r\n    attributes.position = new GeometryAttribute({\r\n      componentDatatype: ComponentDatatype.DOUBLE,\r\n      componentsPerAttribute: 3,\r\n      values: positions,\r\n    });\r\n\r\n    if (vertexFormat.normal) {\r\n      var normals = new Float32Array(4 * 3);\r\n\r\n      // +z face\r\n      normals[0] = 0.0;\r\n      normals[1] = 0.0;\r\n      normals[2] = 1.0;\r\n      normals[3] = 0.0;\r\n      normals[4] = 0.0;\r\n      normals[5] = 1.0;\r\n      normals[6] = 0.0;\r\n      normals[7] = 0.0;\r\n      normals[8] = 1.0;\r\n      normals[9] = 0.0;\r\n      normals[10] = 0.0;\r\n      normals[11] = 1.0;\r\n\r\n      attributes.normal = new GeometryAttribute({\r\n        componentDatatype: ComponentDatatype.FLOAT,\r\n        componentsPerAttribute: 3,\r\n        values: normals,\r\n      });\r\n    }\r\n\r\n    if (vertexFormat.st) {\r\n      var texCoords = new Float32Array(4 * 2);\r\n\r\n      // +z face\r\n      texCoords[0] = 0.0;\r\n      texCoords[1] = 0.0;\r\n      texCoords[2] = 1.0;\r\n      texCoords[3] = 0.0;\r\n      texCoords[4] = 1.0;\r\n      texCoords[5] = 1.0;\r\n      texCoords[6] = 0.0;\r\n      texCoords[7] = 1.0;\r\n\r\n      attributes.st = new GeometryAttribute({\r\n        componentDatatype: ComponentDatatype.FLOAT,\r\n        componentsPerAttribute: 2,\r\n        values: texCoords,\r\n      });\r\n    }\r\n\r\n    if (vertexFormat.tangent) {\r\n      var tangents = new Float32Array(4 * 3);\r\n\r\n      // +z face\r\n      tangents[0] = 1.0;\r\n      tangents[1] = 0.0;\r\n      tangents[2] = 0.0;\r\n      tangents[3] = 1.0;\r\n      tangents[4] = 0.0;\r\n      tangents[5] = 0.0;\r\n      tangents[6] = 1.0;\r\n      tangents[7] = 0.0;\r\n      tangents[8] = 0.0;\r\n      tangents[9] = 1.0;\r\n      tangents[10] = 0.0;\r\n      tangents[11] = 0.0;\r\n\r\n      attributes.tangent = new GeometryAttribute({\r\n        componentDatatype: ComponentDatatype.FLOAT,\r\n        componentsPerAttribute: 3,\r\n        values: tangents,\r\n      });\r\n    }\r\n\r\n    if (vertexFormat.bitangent) {\r\n      var bitangents = new Float32Array(4 * 3);\r\n\r\n      // +z face\r\n      bitangents[0] = 0.0;\r\n      bitangents[1] = 1.0;\r\n      bitangents[2] = 0.0;\r\n      bitangents[3] = 0.0;\r\n      bitangents[4] = 1.0;\r\n      bitangents[5] = 0.0;\r\n      bitangents[6] = 0.0;\r\n      bitangents[7] = 1.0;\r\n      bitangents[8] = 0.0;\r\n      bitangents[9] = 0.0;\r\n      bitangents[10] = 1.0;\r\n      bitangents[11] = 0.0;\r\n\r\n      attributes.bitangent = new GeometryAttribute({\r\n        componentDatatype: ComponentDatatype.FLOAT,\r\n        componentsPerAttribute: 3,\r\n        values: bitangents,\r\n      });\r\n    }\r\n\r\n    // 2 triangles\r\n    indices = new Uint16Array(2 * 3);\r\n\r\n    // +z face\r\n    indices[0] = 0;\r\n    indices[1] = 1;\r\n    indices[2] = 2;\r\n    indices[3] = 0;\r\n    indices[4] = 2;\r\n    indices[5] = 3;\r\n  }\r\n\r\n  return new Geometry({\r\n    attributes: attributes,\r\n    indices: indices,\r\n    primitiveType: PrimitiveType.TRIANGLES,\r\n    boundingSphere: new BoundingSphere(Cartesian3.ZERO, Math.sqrt(2.0)),\r\n  });\r\n};\r\nexport default PlaneGeometry;\r\n","import defined from \"../Core/defined.js\";\r\nimport PlaneGeometry from \"../Core/PlaneGeometry.js\";\r\n\r\nfunction createPlaneGeometry(planeGeometry, offset) {\r\n  if (defined(offset)) {\r\n    planeGeometry = PlaneGeometry.unpack(planeGeometry, offset);\r\n  }\r\n  return PlaneGeometry.createGeometry(planeGeometry);\r\n}\r\nexport default createPlaneGeometry;\r\n"],"names":["defaultValue","VertexFormat","Check","defined","Cartesian3","GeometryAttributes","GeometryAttribute","ComponentDatatype","Geometry","PrimitiveType","BoundingSphere"],"mappings":"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"}